$date
	Mon May 24 13:22:01 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module BancoPrueba_1 $end
$var wire 1 ! validOut8 $end
$var wire 1 " validOut7 $end
$var wire 1 # validOut6 $end
$var wire 1 $ validOut5 $end
$var wire 1 % validOut4 $end
$var wire 1 & validOut3 $end
$var wire 1 ' validOut2 $end
$var wire 1 ( validOut1 $end
$var wire 1 ) validOut0 $end
$var wire 1 * validIn3 $end
$var wire 1 + validIn2 $end
$var wire 1 , validIn1 $end
$var wire 1 - validIn0 $end
$var wire 1 . selector1 $end
$var wire 1 / selector0 $end
$var wire 1 0 reset $end
$var wire 8 1 dataOut8 [7:0] $end
$var wire 8 2 dataOut7 [7:0] $end
$var wire 8 3 dataOut6 [7:0] $end
$var wire 8 4 dataOut5 [7:0] $end
$var wire 8 5 dataOut4 [7:0] $end
$var wire 8 6 dataOut3 [7:0] $end
$var wire 8 7 dataOut2 [7:0] $end
$var wire 8 8 dataOut1 [7:0] $end
$var wire 8 9 dataOut0 [7:0] $end
$var wire 8 : dataIn3 [7:0] $end
$var wire 8 ; dataIn2 [7:0] $end
$var wire 8 < dataIn1 [7:0] $end
$var wire 8 = dataIn0 [7:0] $end
$var wire 1 > clk_3 $end
$var wire 1 ? clk_2 $end
$var wire 1 @ clk_1 $end
$scope module DeL1 $end
$var wire 1 ! validOut3 $end
$var wire 1 " validOut2 $end
$var wire 1 # validOut1 $end
$var wire 1 $ validOut0 $end
$var wire 1 % validIn1 $end
$var wire 1 & validIn0 $end
$var wire 1 / selector $end
$var wire 1 0 reset $end
$var wire 8 A dataOut3 [7:0] $end
$var wire 8 B dataOut2 [7:0] $end
$var wire 8 C dataOut1 [7:0] $end
$var wire 8 D dataOut0 [7:0] $end
$var wire 8 E dataIn1 [7:0] $end
$var wire 8 F dataIn0 [7:0] $end
$var wire 1 ? clk $end
$scope module Demux1 $end
$var wire 1 & validIn $end
$var wire 1 / selector $end
$var wire 1 0 reset $end
$var wire 8 G dataIn [7:0] $end
$var wire 1 ? clk $end
$var reg 8 H dataOut0 [7:0] $end
$var reg 8 I dataOut1 [7:0] $end
$var reg 8 J out0 [7:0] $end
$var reg 8 K out1 [7:0] $end
$var reg 1 L validDeMux0 $end
$var reg 1 M validDeMux1 $end
$var reg 1 $ validOut0 $end
$var reg 1 # validOut1 $end
$upscope $end
$scope module Demux2 $end
$var wire 1 % validIn $end
$var wire 1 / selector $end
$var wire 1 0 reset $end
$var wire 8 N dataIn [7:0] $end
$var wire 1 ? clk $end
$var reg 8 O dataOut0 [7:0] $end
$var reg 8 P dataOut1 [7:0] $end
$var reg 8 Q out0 [7:0] $end
$var reg 8 R out1 [7:0] $end
$var reg 1 S validDeMux0 $end
$var reg 1 T validDeMux1 $end
$var reg 1 " validOut0 $end
$var reg 1 ! validOut1 $end
$upscope $end
$upscope $end
$scope module DeL2 $end
$var wire 1 % validOut1 $end
$var wire 1 & validOut0 $end
$var wire 1 ' validIn $end
$var wire 1 . selector $end
$var wire 1 0 reset $end
$var wire 8 U dataOut1 [7:0] $end
$var wire 8 V dataOut0 [7:0] $end
$var wire 8 W dataIn [7:0] $end
$var wire 1 @ clk $end
$scope module Demux $end
$var wire 1 ' validIn $end
$var wire 1 . selector $end
$var wire 1 0 reset $end
$var wire 8 X dataIn [7:0] $end
$var wire 1 @ clk $end
$var reg 8 Y dataOut0 [7:0] $end
$var reg 8 Z dataOut1 [7:0] $end
$var reg 8 [ out0 [7:0] $end
$var reg 8 \ out1 [7:0] $end
$var reg 1 ] validDeMux0 $end
$var reg 1 ^ validDeMux1 $end
$var reg 1 & validOut0 $end
$var reg 1 % validOut1 $end
$upscope $end
$upscope $end
$scope module L1 $end
$var wire 1 ( validOut1 $end
$var wire 1 ) validOut0 $end
$var wire 1 * validIn3 $end
$var wire 1 + validIn2 $end
$var wire 1 , validIn1 $end
$var wire 1 - validIn0 $end
$var wire 1 / selector $end
$var wire 1 0 reset $end
$var wire 8 _ dataOut1 [7:0] $end
$var wire 8 ` dataOut0 [7:0] $end
$var wire 8 a dataIn3 [7:0] $end
$var wire 8 b dataIn2 [7:0] $end
$var wire 8 c dataIn1 [7:0] $end
$var wire 8 d dataIn0 [7:0] $end
$var wire 1 ? clk $end
$scope module mux1 $end
$var wire 1 , validIn1 $end
$var wire 1 - validIn0 $end
$var wire 1 / selector $end
$var wire 1 0 reset $end
$var wire 8 e dataIn1 [7:0] $end
$var wire 8 f dataIn0 [7:0] $end
$var wire 1 ? clk $end
$var reg 8 g dataOut [7:0] $end
$var reg 8 h out [7:0] $end
$var reg 1 i validMux $end
$var reg 1 ) validOut $end
$upscope $end
$scope module mux2 $end
$var wire 1 * validIn1 $end
$var wire 1 + validIn0 $end
$var wire 1 / selector $end
$var wire 1 0 reset $end
$var wire 8 j dataIn1 [7:0] $end
$var wire 8 k dataIn0 [7:0] $end
$var wire 1 ? clk $end
$var reg 8 l dataOut [7:0] $end
$var reg 8 m out [7:0] $end
$var reg 1 n validMux $end
$var reg 1 ( validOut $end
$upscope $end
$upscope $end
$scope module L2 $end
$var wire 8 o dataIn0 [7:0] $end
$var wire 8 p dataIn1 [7:0] $end
$var wire 1 ) validIn0 $end
$var wire 1 ( validIn1 $end
$var wire 1 ' validOut $end
$var wire 1 . selector $end
$var wire 1 0 reset $end
$var wire 8 q dataOut [7:0] $end
$var wire 1 @ clk $end
$scope module mux1 $end
$var wire 8 r dataIn0 [7:0] $end
$var wire 8 s dataIn1 [7:0] $end
$var wire 1 ) validIn0 $end
$var wire 1 ( validIn1 $end
$var wire 1 . selector $end
$var wire 1 0 reset $end
$var wire 1 @ clk $end
$var reg 8 t dataOut [7:0] $end
$var reg 8 u out [7:0] $end
$var reg 1 v validMux $end
$var reg 1 ' validOut $end
$upscope $end
$upscope $end
$scope module probador $end
$var wire 8 w dataOut0 [7:0] $end
$var wire 8 x dataOut1 [7:0] $end
$var wire 8 y dataOut2 [7:0] $end
$var wire 8 z dataOut3 [7:0] $end
$var wire 8 { dataOut4 [7:0] $end
$var wire 8 | dataOut5 [7:0] $end
$var wire 8 } dataOut6 [7:0] $end
$var wire 8 ~ dataOut7 [7:0] $end
$var wire 8 !" dataOut8 [7:0] $end
$var wire 1 ) validOut0 $end
$var wire 1 ( validOut1 $end
$var wire 1 ' validOut2 $end
$var wire 1 & validOut3 $end
$var wire 1 % validOut4 $end
$var wire 1 $ validOut5 $end
$var wire 1 # validOut6 $end
$var wire 1 " validOut7 $end
$var wire 1 ! validOut8 $end
$var reg 1 @ clk_1 $end
$var reg 1 ? clk_2 $end
$var reg 1 > clk_3 $end
$var reg 8 "" dataIn0 [7:0] $end
$var reg 8 #" dataIn1 [7:0] $end
$var reg 8 $" dataIn2 [7:0] $end
$var reg 8 %" dataIn3 [7:0] $end
$var reg 1 0 reset $end
$var reg 1 / selector0 $end
$var reg 1 . selector1 $end
$var reg 1 - validIn0 $end
$var reg 1 , validIn1 $end
$var reg 1 + validIn2 $end
$var reg 1 * validIn3 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 %"
b0 $"
b0 #"
b0 ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
xv
bx u
bx t
bx s
bx r
bx q
bx p
bx o
0n
b0 m
bx l
b0 k
b0 j
0i
b0 h
bx g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
bx `
bx _
x^
x]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
xT
xS
bx R
bx Q
bx P
bx O
bx N
xM
xL
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
0@
0?
0>
b0 =
b0 <
b0 ;
b0 :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
00
0/
0.
0-
0,
0+
0*
x)
x(
x'
x&
x%
x$
x#
x"
x!
$end
#1
b0 [
b0 Q
b0 J
b0 7
b0 W
b0 X
b0 q
b0 t
b0 y
b0 5
b0 E
b0 N
b0 U
b0 Z
b0 {
b0 6
b0 F
b0 G
b0 V
b0 Y
b0 z
1@
#2
b0 u
b0 9
b0 `
b0 g
b0 o
b0 r
b0 w
b0 8
b0 _
b0 l
b0 p
b0 s
b0 x
b0 3
b0 C
b0 I
b0 }
b0 4
b0 D
b0 H
b0 |
b0 1
b0 A
b0 P
b0 !"
b0 2
b0 B
b0 O
b0 ~
0@
1?
#3
1@
#4
10
0@
0?
1>
#5
1@
#6
0v
b0 K
b0 R
0(
0)
1/
0@
1?
#7
0]
0'
1@
#8
0@
0?
0>
#9
0M
0&
1@
#10
0L
0/
0#
0@
1?
#11
0^
b0 \
1.
1@
#12
1n
b11011101 m
1i
b11111111 h
1*
1+
1,
1-
b11001100 :
b11001100 a
b11001100 j
b11001100 %"
b11011101 ;
b11011101 b
b11011101 k
b11011101 $"
b11101110 <
b11101110 c
b11101110 e
b11101110 #"
b11111111 =
b11111111 d
b11111111 f
b11111111 ""
0@
0?
1>
#13
0S
0%
0.
1@
#14
1v
b11111111 u
0T
b11101110 h
b11001100 m
0"
0$
1(
b11011101 8
b11011101 _
b11011101 l
b11011101 p
b11011101 s
b11011101 x
1)
b11111111 9
b11111111 `
b11111111 g
b11111111 o
b11111111 r
b11111111 w
1/
0@
1?
#15
1^
b11111111 \
b11011101 u
1'
b11111111 7
b11111111 W
b11111111 X
b11111111 q
b11111111 t
b11111111 y
1.
1@
#16
0@
0?
0>
#17
b11111111 u
1]
b11011101 [
1T
b11111111 R
0.
b11011101 7
b11011101 W
b11011101 X
b11011101 q
b11011101 t
b11011101 y
1%
b11111111 5
b11111111 E
b11111111 N
b11111111 U
b11111111 Z
b11111111 {
1@
#18
b11101110 u
1S
b11111111 Q
b11111111 h
b11011101 m
b11101110 9
b11101110 `
b11101110 g
b11101110 o
b11101110 r
b11101110 w
b11001100 8
b11001100 _
b11001100 l
b11001100 p
b11001100 s
b11001100 x
1!
b11111111 1
b11111111 A
b11111111 P
b11111111 !"
0/
0@
1?
#19
1L
b11011101 J
b11101110 \
b11001100 u
1&
b11011101 6
b11011101 F
b11011101 G
b11011101 V
b11011101 Y
b11011101 z
b11101110 7
b11101110 W
b11101110 X
b11101110 q
b11101110 t
b11101110 y
1.
1@
#20
b10011001 m
b10111011 h
b10001000 :
b10001000 a
b10001000 j
b10001000 %"
b10011001 ;
b10011001 b
b10011001 k
b10011001 $"
b10101010 <
b10101010 c
b10101010 e
b10101010 #"
b10111011 =
b10111011 d
b10111011 f
b10111011 ""
0@
0?
1>
#21
b11101110 Q
b11001100 [
b11101110 u
b11001100 7
b11001100 W
b11001100 X
b11001100 q
b11001100 t
b11001100 y
b11101110 5
b11101110 E
b11101110 N
b11101110 U
b11101110 Z
b11101110 {
0.
1@
#22
b10111011 u
1M
b11011101 K
b11101110 R
b10101010 h
b10001000 m
1"
b11101110 2
b11101110 B
b11101110 O
b11101110 ~
1$
b11011101 4
b11011101 D
b11011101 H
b11011101 |
b10011001 8
b10011001 _
b10011001 l
b10011001 p
b10011001 s
b10011001 x
b10111011 9
b10111011 `
b10111011 g
b10111011 o
b10111011 r
b10111011 w
1/
0@
1?
#23
b11001100 K
b10111011 \
b10011001 u
b11001100 6
b11001100 F
b11001100 G
b11001100 V
b11001100 Y
b11001100 z
b10111011 7
b10111011 W
b10111011 X
b10111011 q
b10111011 t
b10111011 y
1.
1@
#24
0@
0?
0>
#25
b10111011 u
b10011001 [
b10111011 R
0.
b10011001 7
b10011001 W
b10011001 X
b10011001 q
b10011001 t
b10011001 y
b10111011 5
b10111011 E
b10111011 N
b10111011 U
b10111011 Z
b10111011 {
1@
#26
b10101010 u
b11001100 J
b10111011 Q
b10111011 h
b10011001 m
b10101010 9
b10101010 `
b10101010 g
b10101010 o
b10101010 r
b10101010 w
b10001000 8
b10001000 _
b10001000 l
b10001000 p
b10001000 s
b10001000 x
1#
b11001100 3
b11001100 C
b11001100 I
b11001100 }
b10111011 1
b10111011 A
b10111011 P
b10111011 !"
0/
0@
1?
#27
b10011001 J
b10101010 \
b10001000 u
b10011001 6
b10011001 F
b10011001 G
b10011001 V
b10011001 Y
b10011001 z
b10101010 7
b10101010 W
b10101010 X
b10101010 q
b10101010 t
b10101010 y
1.
1@
#28
b1110111 m
0i
b0 h
0*
0,
0-
b0 :
b0 a
b0 j
b0 %"
b1110111 ;
b1110111 b
b1110111 k
b1110111 $"
b0 <
b0 c
b0 e
b0 #"
b0 =
b0 d
b0 f
b0 ""
0@
0?
1>
#29
b10101010 Q
b10001000 [
b10101010 u
b10001000 7
b10001000 W
b10001000 X
b10001000 q
b10001000 t
b10001000 y
b10101010 5
b10101010 E
b10101010 N
b10101010 U
b10101010 Z
b10101010 {
0.
1@
#30
0v
b10011001 K
b10101010 R
0n
b0 m
b10101010 2
b10101010 B
b10101010 O
b10101010 ~
b10011001 4
b10011001 D
b10011001 H
b10011001 |
b1110111 8
b1110111 _
b1110111 l
b1110111 p
b1110111 s
b1110111 x
0)
1/
0@
1?
#31
b10001000 K
0^
b10001000 \
1v
b1110111 u
b10001000 6
b10001000 F
b10001000 G
b10001000 V
b10001000 Y
b10001000 z
0'
1.
1@
#32
0@
0?
0>
#33
0v
b10101010 u
b1110111 [
0T
0.
1'
b1110111 7
b1110111 W
b1110111 X
b1110111 q
b1110111 t
b1110111 y
0%
1@
#34
b10001000 J
0S
1n
b1110111 m
0(
b10001000 3
b10001000 C
b10001000 I
b10001000 }
0!
0/
0@
1?
#35
b1110111 J
0]
b1110111 6
b1110111 F
b1110111 G
b1110111 V
b1110111 Y
b1110111 z
0'
1@
#36
0@
0?
1>
#37
0L
0&
1@
#38
0M
b1110111 K
0n
b0 m
1/
0"
0$
1(
0@
1?
#39
1@
#40
0@
0?
0>
#41
1@
#42
1n
b1110111 m
0(
0#
0/
0@
1?
#43
1@
#44
0@
0?
1>
#45
1@
#46
0n
b0 m
1/
1(
0@
1?
#47
1@
#48
0@
0?
0>
#49
1@
#50
1n
b1110111 m
0(
0/
0@
1?
#51
1@
#52
0@
0?
1>
#53
1@
#54
0n
b0 m
1/
1(
0@
1?
#55
1@
#56
0@
0?
0>
#57
1@
#58
1n
b1110111 m
0(
0/
0@
1?
#59
1@
#60
0@
0?
1>
#61
1@
#62
0n
b0 m
1/
1(
0@
1?
#63
1@
#64
0@
0?
0>
#65
1@
#66
1n
b1110111 m
0(
0/
0@
1?
#67
1@
#68
0@
0?
1>
#69
1@
#70
0n
b0 m
1/
1(
0@
1?
#71
1@
#72
0@
0?
0>
#73
1@
#74
1n
b1110111 m
0(
0/
0@
1?
