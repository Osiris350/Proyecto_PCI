/* Generated by Yosys 0.9+4052 (git sha1 44520808, clang 10.0.0-4ubuntu1 -fPIC -Os) */

(* src = "Mux2x1_synth.v:1.1-56.10" *)
module Mux2x1_synth(dataOut, validOut, dataIn0, dataIn1, validIn0, validIn1, clk, reset);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  (* src = "Mux2x1_synth.v:8.11-8.14" *)
  input clk;
  (* src = "Mux2x1_synth.v:4.16-4.23" *)
  input [7:0] dataIn0;
  (* src = "Mux2x1_synth.v:5.16-5.23" *)
  input [7:0] dataIn1;
  (* src = "Mux2x1_synth.v:2.21-2.28" *)
  output [7:0] dataOut;
  (* src = "Mux2x1_synth.v:9.11-9.16" *)
  input reset;
  (* src = "Mux2x1_synth.v:13.9-13.17" *)
  wire selector;
  (* src = "Mux2x1_synth.v:6.11-6.19" *)
  input validIn0;
  (* src = "Mux2x1_synth.v:7.11-7.19" *)
  input validIn1;
  (* src = "Mux2x1_synth.v:3.16-3.24" *)
  output validOut;
  NOT _073_ (
    .A(dataOut[7]),
    .Y(_018_)
  );
  NOT _074_ (
    .A(reset),
    .Y(_019_)
  );
  NOT _075_ (
    .A(dataOut[6]),
    .Y(_020_)
  );
  NOT _076_ (
    .A(dataOut[5]),
    .Y(_021_)
  );
  NOT _077_ (
    .A(dataOut[4]),
    .Y(_022_)
  );
  NOT _078_ (
    .A(dataOut[3]),
    .Y(_023_)
  );
  NOT _079_ (
    .A(dataOut[2]),
    .Y(_024_)
  );
  NOT _080_ (
    .A(dataOut[1]),
    .Y(_025_)
  );
  NOT _081_ (
    .A(dataOut[0]),
    .Y(_026_)
  );
  NOT _082_ (
    .A(selector),
    .Y(_027_)
  );
  NOT _083_ (
    .A(validIn0),
    .Y(_028_)
  );
  NAND _084_ (
    .A(selector),
    .B(validIn1),
    .Y(_029_)
  );
  NOT _085_ (
    .A(_029_),
    .Y(_030_)
  );
  NOR _086_ (
    .A(selector),
    .B(_028_),
    .Y(_031_)
  );
  NOR _087_ (
    .A(_030_),
    .B(_031_),
    .Y(_032_)
  );
  NAND _088_ (
    .A(selector),
    .B(dataIn1[6]),
    .Y(_033_)
  );
  NAND _089_ (
    .A(_027_),
    .B(dataIn0[6]),
    .Y(_034_)
  );
  NAND _090_ (
    .A(_033_),
    .B(_034_),
    .Y(_035_)
  );
  NOR _091_ (
    .A(_032_),
    .B(_035_),
    .Y(_036_)
  );
  NAND _092_ (
    .A(_020_),
    .B(_032_),
    .Y(_037_)
  );
  NAND _093_ (
    .A(reset),
    .B(_037_),
    .Y(_038_)
  );
  NOR _094_ (
    .A(_036_),
    .B(_038_),
    .Y(_008_)
  );
  NAND _095_ (
    .A(selector),
    .B(dataIn1[5]),
    .Y(_039_)
  );
  NAND _096_ (
    .A(_027_),
    .B(dataIn0[5]),
    .Y(_040_)
  );
  NAND _097_ (
    .A(_039_),
    .B(_040_),
    .Y(_041_)
  );
  NOR _098_ (
    .A(_032_),
    .B(_041_),
    .Y(_042_)
  );
  NAND _099_ (
    .A(_021_),
    .B(_032_),
    .Y(_043_)
  );
  NAND _100_ (
    .A(reset),
    .B(_043_),
    .Y(_044_)
  );
  NOR _101_ (
    .A(_042_),
    .B(_044_),
    .Y(_007_)
  );
  NAND _102_ (
    .A(selector),
    .B(dataIn1[4]),
    .Y(_045_)
  );
  NAND _103_ (
    .A(_027_),
    .B(dataIn0[4]),
    .Y(_046_)
  );
  NAND _104_ (
    .A(_045_),
    .B(_046_),
    .Y(_047_)
  );
  NOR _105_ (
    .A(_032_),
    .B(_047_),
    .Y(_048_)
  );
  NAND _106_ (
    .A(_022_),
    .B(_032_),
    .Y(_049_)
  );
  NAND _107_ (
    .A(reset),
    .B(_049_),
    .Y(_050_)
  );
  NOR _108_ (
    .A(_048_),
    .B(_050_),
    .Y(_006_)
  );
  NAND _109_ (
    .A(selector),
    .B(dataIn1[3]),
    .Y(_051_)
  );
  NAND _110_ (
    .A(_027_),
    .B(dataIn0[3]),
    .Y(_052_)
  );
  NAND _111_ (
    .A(_051_),
    .B(_052_),
    .Y(_053_)
  );
  NOR _112_ (
    .A(_032_),
    .B(_053_),
    .Y(_054_)
  );
  NAND _113_ (
    .A(_023_),
    .B(_032_),
    .Y(_055_)
  );
  NAND _114_ (
    .A(reset),
    .B(_055_),
    .Y(_056_)
  );
  NOR _115_ (
    .A(_054_),
    .B(_056_),
    .Y(_005_)
  );
  NAND _116_ (
    .A(selector),
    .B(dataIn1[2]),
    .Y(_057_)
  );
  NAND _117_ (
    .A(_027_),
    .B(dataIn0[2]),
    .Y(_058_)
  );
  NAND _118_ (
    .A(_057_),
    .B(_058_),
    .Y(_059_)
  );
  NOR _119_ (
    .A(_032_),
    .B(_059_),
    .Y(_060_)
  );
  NAND _120_ (
    .A(_024_),
    .B(_032_),
    .Y(_061_)
  );
  NAND _121_ (
    .A(reset),
    .B(_061_),
    .Y(_062_)
  );
  NOR _122_ (
    .A(_060_),
    .B(_062_),
    .Y(_004_)
  );
  NAND _123_ (
    .A(selector),
    .B(dataIn1[1]),
    .Y(_063_)
  );
  NAND _124_ (
    .A(_027_),
    .B(dataIn0[1]),
    .Y(_064_)
  );
  NAND _125_ (
    .A(_063_),
    .B(_064_),
    .Y(_065_)
  );
  NOR _126_ (
    .A(_032_),
    .B(_065_),
    .Y(_066_)
  );
  NAND _127_ (
    .A(_025_),
    .B(_032_),
    .Y(_067_)
  );
  NAND _128_ (
    .A(reset),
    .B(_067_),
    .Y(_068_)
  );
  NOR _129_ (
    .A(_066_),
    .B(_068_),
    .Y(_003_)
  );
  NAND _130_ (
    .A(selector),
    .B(dataIn1[0]),
    .Y(_069_)
  );
  NAND _131_ (
    .A(_027_),
    .B(dataIn0[0]),
    .Y(_070_)
  );
  NAND _132_ (
    .A(_069_),
    .B(_070_),
    .Y(_071_)
  );
  NOR _133_ (
    .A(_032_),
    .B(_071_),
    .Y(_072_)
  );
  NAND _134_ (
    .A(_026_),
    .B(_032_),
    .Y(_010_)
  );
  NAND _135_ (
    .A(reset),
    .B(_010_),
    .Y(_011_)
  );
  NOR _136_ (
    .A(_072_),
    .B(_011_),
    .Y(_002_)
  );
  NOR _137_ (
    .A(_019_),
    .B(_032_),
    .Y(_001_)
  );
  NAND _138_ (
    .A(reset),
    .B(selector),
    .Y(_000_)
  );
  NAND _139_ (
    .A(selector),
    .B(dataIn1[7]),
    .Y(_012_)
  );
  NAND _140_ (
    .A(_027_),
    .B(dataIn0[7]),
    .Y(_013_)
  );
  NAND _141_ (
    .A(_012_),
    .B(_013_),
    .Y(_014_)
  );
  NOR _142_ (
    .A(_032_),
    .B(_014_),
    .Y(_015_)
  );
  NAND _143_ (
    .A(_018_),
    .B(_032_),
    .Y(_016_)
  );
  NAND _144_ (
    .A(reset),
    .B(_016_),
    .Y(_017_)
  );
  NOR _145_ (
    .A(_015_),
    .B(_017_),
    .Y(_009_)
  );
  (* src = "Mux2x1_synth.v:15.5-22.8" *)
  DFF _146_ (
    .C(clk),
    .D(_000_),
    .Q(selector)
  );
  (* src = "Mux2x1_synth.v:39.5-55.12" *)
  DFF _147_ (
    .C(clk),
    .D(_001_),
    .Q(validOut)
  );
  (* src = "Mux2x1_synth.v:39.5-55.12" *)
  DFF _148_ (
    .C(clk),
    .D(_002_),
    .Q(dataOut[0])
  );
  (* src = "Mux2x1_synth.v:39.5-55.12" *)
  DFF _149_ (
    .C(clk),
    .D(_003_),
    .Q(dataOut[1])
  );
  (* src = "Mux2x1_synth.v:39.5-55.12" *)
  DFF _150_ (
    .C(clk),
    .D(_004_),
    .Q(dataOut[2])
  );
  (* src = "Mux2x1_synth.v:39.5-55.12" *)
  DFF _151_ (
    .C(clk),
    .D(_005_),
    .Q(dataOut[3])
  );
  (* src = "Mux2x1_synth.v:39.5-55.12" *)
  DFF _152_ (
    .C(clk),
    .D(_006_),
    .Q(dataOut[4])
  );
  (* src = "Mux2x1_synth.v:39.5-55.12" *)
  DFF _153_ (
    .C(clk),
    .D(_007_),
    .Q(dataOut[5])
  );
  (* src = "Mux2x1_synth.v:39.5-55.12" *)
  DFF _154_ (
    .C(clk),
    .D(_008_),
    .Q(dataOut[6])
  );
  (* src = "Mux2x1_synth.v:39.5-55.12" *)
  DFF _155_ (
    .C(clk),
    .D(_009_),
    .Q(dataOut[7])
  );
endmodule

(* src = "MuxL1_synth.v:3.1-47.10" *)
module MuxL1_synth(dataOut0, dataOut1, validOut0, validOut1, dataIn0, dataIn1, dataIn2, dataIn3, validIn0, validIn1, validIn2, validIn3, clk, reset);
  (* src = "MuxL1_synth.v:17.11-17.14" *)
  input clk;
  (* src = "MuxL1_synth.v:8.16-8.23" *)
  input [7:0] dataIn0;
  (* src = "MuxL1_synth.v:9.16-9.23" *)
  input [7:0] dataIn1;
  (* src = "MuxL1_synth.v:10.16-10.23" *)
  input [7:0] dataIn2;
  (* src = "MuxL1_synth.v:11.16-11.23" *)
  input [7:0] dataIn3;
  (* src = "MuxL1_synth.v:4.17-4.25" *)
  output [7:0] dataOut0;
  (* src = "MuxL1_synth.v:5.17-5.25" *)
  output [7:0] dataOut1;
  (* src = "MuxL1_synth.v:18.11-18.16" *)
  input reset;
  (* src = "MuxL1_synth.v:12.11-12.19" *)
  input validIn0;
  (* src = "MuxL1_synth.v:13.11-13.19" *)
  input validIn1;
  (* src = "MuxL1_synth.v:14.11-14.19" *)
  input validIn2;
  (* src = "MuxL1_synth.v:15.11-15.19" *)
  input validIn3;
  (* src = "MuxL1_synth.v:6.12-6.21" *)
  output validOut0;
  (* src = "MuxL1_synth.v:7.12-7.21" *)
  output validOut1;
  (* module_not_derived = 32'd1 *)
  (* src = "MuxL1_synth.v:20.12-32.6" *)
  Mux2x1_synth mux1 (
    .clk(clk),
    .dataIn0(dataIn0),
    .dataIn1(dataIn1),
    .dataOut(dataOut0),
    .reset(reset),
    .validIn0(validIn0),
    .validIn1(validIn1),
    .validOut(validOut0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "MuxL1_synth.v:34.12-46.6" *)
  Mux2x1_synth mux2 (
    .clk(clk),
    .dataIn0(dataIn2),
    .dataIn1(dataIn3),
    .dataOut(dataOut1),
    .reset(reset),
    .validIn0(validIn2),
    .validIn1(validIn3),
    .validOut(validOut1)
  );
endmodule

(* src = "MuxL2_synth.v:3.1-25.10" *)
module MuxL2_synth(dataOut, validOut, dataIn0, dataIn1, validIn0, validIn1, clk, reset);
  (* src = "MuxL2_synth.v:10.11-10.14" *)
  input clk;
  (* src = "MuxL2_synth.v:6.16-6.23" *)
  input [7:0] dataIn0;
  (* src = "MuxL2_synth.v:7.16-7.23" *)
  input [7:0] dataIn1;
  (* src = "MuxL2_synth.v:4.17-4.24" *)
  output [7:0] dataOut;
  (* src = "MuxL2_synth.v:11.11-11.16" *)
  input reset;
  (* src = "MuxL2_synth.v:8.11-8.19" *)
  input validIn0;
  (* src = "MuxL2_synth.v:9.11-9.19" *)
  input validIn1;
  (* src = "MuxL2_synth.v:5.12-5.20" *)
  output validOut;
  (* module_not_derived = 32'd1 *)
  (* src = "MuxL2_synth.v:13.12-24.6" *)
  Mux2x1_synth mux1 (
    .clk(clk),
    .dataIn0(dataIn1),
    .dataIn1(dataIn0),
    .dataOut(dataOut),
    .reset(reset),
    .validIn0(validIn1),
    .validIn1(validIn0),
    .validOut(validOut)
  );
endmodule

(* src = "ParaleloSerial_PhyTX_synth.v:1.1-57.10" *)
module ParaleloSerial_PhyTX_synth(clk, validIn, reset, inputP, outputS_synth);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  wire _40_;
  wire _41_;
  wire _42_;
  wire _43_;
  wire _44_;
  (* src = "ParaleloSerial_PhyTX_synth.v:2.8-2.11" *)
  input clk;
  (* src = "ParaleloSerial_PhyTX_synth.v:5.14-5.20" *)
  input [7:0] inputP;
  (* src = "ParaleloSerial_PhyTX_synth.v:6.13-6.25" *)
  output outputS_synth;
  (* src = "ParaleloSerial_PhyTX_synth.v:4.8-4.13" *)
  input reset;
  (* init = 3'h0 *)
  (* src = "ParaleloSerial_PhyTX_synth.v:9.14-9.27" *)
  wire [2:0] selector_synth;
  (* src = "ParaleloSerial_PhyTX_synth.v:3.8-3.15" *)
  input validIn;
  NOT _45_ (
    .A(reset),
    .Y(_03_)
  );
  NOT _46_ (
    .A(selector_synth[0]),
    .Y(_04_)
  );
  NOT _47_ (
    .A(selector_synth[1]),
    .Y(_05_)
  );
  NOT _48_ (
    .A(selector_synth[2]),
    .Y(_06_)
  );
  NOT _49_ (
    .A(validIn),
    .Y(_07_)
  );
  NOT _50_ (
    .A(inputP[7]),
    .Y(_08_)
  );
  NOT _51_ (
    .A(inputP[5]),
    .Y(_09_)
  );
  NOT _52_ (
    .A(inputP[3]),
    .Y(_10_)
  );
  NOT _53_ (
    .A(inputP[1]),
    .Y(_11_)
  );
  NAND _54_ (
    .A(selector_synth[0]),
    .B(selector_synth[1]),
    .Y(_12_)
  );
  NOT _55_ (
    .A(_12_),
    .Y(_13_)
  );
  NAND _56_ (
    .A(_04_),
    .B(_05_),
    .Y(_14_)
  );
  NAND _57_ (
    .A(reset),
    .B(_14_),
    .Y(_15_)
  );
  NOR _58_ (
    .A(_13_),
    .B(_15_),
    .Y(_01_)
  );
  NOR _59_ (
    .A(_03_),
    .B(selector_synth[0]),
    .Y(_00_)
  );
  NAND _60_ (
    .A(inputP[0]),
    .B(_13_),
    .Y(_16_)
  );
  NAND _61_ (
    .A(selector_synth[2]),
    .B(_16_),
    .Y(_17_)
  );
  NAND _62_ (
    .A(selector_synth[0]),
    .B(_05_),
    .Y(_18_)
  );
  NOT _63_ (
    .A(_18_),
    .Y(_19_)
  );
  NAND _64_ (
    .A(inputP[2]),
    .B(_19_),
    .Y(_20_)
  );
  NAND _65_ (
    .A(_04_),
    .B(selector_synth[1]),
    .Y(_21_)
  );
  NOR _66_ (
    .A(_11_),
    .B(_21_),
    .Y(_22_)
  );
  NOR _67_ (
    .A(_10_),
    .B(_14_),
    .Y(_23_)
  );
  NOR _68_ (
    .A(_22_),
    .B(_23_),
    .Y(_24_)
  );
  NAND _69_ (
    .A(_20_),
    .B(_24_),
    .Y(_25_)
  );
  NOR _70_ (
    .A(_17_),
    .B(_25_),
    .Y(_26_)
  );
  NAND _71_ (
    .A(inputP[6]),
    .B(_19_),
    .Y(_27_)
  );
  NAND _72_ (
    .A(_06_),
    .B(_27_),
    .Y(_28_)
  );
  NAND _73_ (
    .A(inputP[4]),
    .B(_13_),
    .Y(_29_)
  );
  NOR _74_ (
    .A(_08_),
    .B(_14_),
    .Y(_30_)
  );
  NOR _75_ (
    .A(_09_),
    .B(_21_),
    .Y(_31_)
  );
  NOR _76_ (
    .A(_30_),
    .B(_31_),
    .Y(_32_)
  );
  NAND _77_ (
    .A(_29_),
    .B(_32_),
    .Y(_33_)
  );
  NOR _78_ (
    .A(_28_),
    .B(_33_),
    .Y(_34_)
  );
  NOR _79_ (
    .A(_26_),
    .B(_34_),
    .Y(_35_)
  );
  NOR _80_ (
    .A(_07_),
    .B(_35_),
    .Y(_36_)
  );
  NAND _81_ (
    .A(_06_),
    .B(_18_),
    .Y(_37_)
  );
  NOR _82_ (
    .A(selector_synth[1]),
    .B(_06_),
    .Y(_38_)
  );
  NOR _83_ (
    .A(validIn),
    .B(_38_),
    .Y(_39_)
  );
  NAND _84_ (
    .A(_37_),
    .B(_39_),
    .Y(_40_)
  );
  NAND _85_ (
    .A(reset),
    .B(_40_),
    .Y(_41_)
  );
  NOR _86_ (
    .A(_36_),
    .B(_41_),
    .Y(outputS_synth)
  );
  NOR _87_ (
    .A(_06_),
    .B(_12_),
    .Y(_42_)
  );
  NAND _88_ (
    .A(_06_),
    .B(_12_),
    .Y(_43_)
  );
  NAND _89_ (
    .A(reset),
    .B(_43_),
    .Y(_44_)
  );
  NOR _90_ (
    .A(_42_),
    .B(_44_),
    .Y(_02_)
  );
  (* src = "ParaleloSerial_PhyTX_synth.v:16.1-23.4" *)
  DFF _91_ (
    .C(clk),
    .D(_00_),
    .Q(selector_synth[0])
  );
  (* src = "ParaleloSerial_PhyTX_synth.v:16.1-23.4" *)
  DFF _92_ (
    .C(clk),
    .D(_01_),
    .Q(selector_synth[1])
  );
  (* src = "ParaleloSerial_PhyTX_synth.v:16.1-23.4" *)
  DFF _93_ (
    .C(clk),
    .D(_02_),
    .Q(selector_synth[2])
  );
endmodule

(* top =  1  *)
(* src = "Phy_Tx_synth.v:7.1-126.10" *)
module Phy_Tx_synth(dataIn0, dataIn1, dataIn2, dataIn3, validIn0, validIn1, validIn2, validIn3, active, reset, clk_f, clk_2f, clk_4f, clk_32f, dataOutProbador0_synth, dataOutProbador1_synth, dataOutProbador2_synth, dataOutProbador3_synth, validOutProbador0_synth, validOutProbador1_synth, validOutProbador2_synth, validOutProbador3_synth, SerialOutTx_synth);
  (* src = "Phy_Tx_synth.v:41.10-41.18" *)
  wire IDLE_out;
  (* src = "Phy_Tx_synth.v:33.13-33.29" *)
  output SerialOutTx_synth;
  (* src = "Phy_Tx_synth.v:16.11-16.17" *)
  input active;
  (* src = "Phy_Tx_synth.v:20.11-20.17" *)
  input clk_2f;
  (* src = "Phy_Tx_synth.v:22.11-22.18" *)
  input clk_32f;
  (* src = "Phy_Tx_synth.v:21.11-21.17" *)
  input clk_4f;
  (* src = "Phy_Tx_synth.v:19.11-19.16" *)
  input clk_f;
  (* src = "Phy_Tx_synth.v:8.17-8.24" *)
  input [7:0] dataIn0;
  (* src = "Phy_Tx_synth.v:9.17-9.24" *)
  input [7:0] dataIn1;
  (* src = "Phy_Tx_synth.v:10.17-10.24" *)
  input [7:0] dataIn2;
  (* src = "Phy_Tx_synth.v:11.17-11.24" *)
  input [7:0] dataIn3;
  (* src = "Phy_Tx_synth.v:35.16-35.29" *)
  wire [7:0] dataOut0_synth;
  (* src = "Phy_Tx_synth.v:35.31-35.44" *)
  wire [7:0] dataOut1_synth;
  (* src = "Phy_Tx_synth.v:35.46-35.59" *)
  wire [7:0] dataOut2_synth;
  (* src = "Phy_Tx_synth.v:35.61-35.74" *)
  wire [7:0] dataOut3_synth;
  (* src = "Phy_Tx_synth.v:38.16-38.27" *)
  wire [7:0] dataOutL1_0;
  (* src = "Phy_Tx_synth.v:38.29-38.40" *)
  wire [7:0] dataOutL1_1;
  (* src = "Phy_Tx_synth.v:38.42-38.51" *)
  wire [7:0] dataOutL2;
  (* src = "Phy_Tx_synth.v:24.19-24.40" *)
  output [7:0] dataOutProbador0_synth;
  (* src = "Phy_Tx_synth.v:25.19-25.40" *)
  output [7:0] dataOutProbador1_synth;
  (* src = "Phy_Tx_synth.v:26.19-26.40" *)
  output [7:0] dataOutProbador2_synth;
  (* src = "Phy_Tx_synth.v:27.19-27.40" *)
  output [7:0] dataOutProbador3_synth;
  (* src = "Phy_Tx_synth.v:18.11-18.16" *)
  input reset;
  (* src = "Phy_Tx_synth.v:12.11-12.19" *)
  input validIn0;
  (* src = "Phy_Tx_synth.v:13.11-13.19" *)
  input validIn1;
  (* src = "Phy_Tx_synth.v:14.11-14.19" *)
  input validIn2;
  (* src = "Phy_Tx_synth.v:15.11-15.19" *)
  input validIn3;
  (* src = "Phy_Tx_synth.v:36.7-36.21" *)
  wire validOut0_synth;
  (* src = "Phy_Tx_synth.v:36.23-36.37" *)
  wire validOut1_synth;
  (* src = "Phy_Tx_synth.v:36.39-36.53" *)
  wire validOut2_synth;
  (* src = "Phy_Tx_synth.v:36.55-36.69" *)
  wire validOut3_synth;
  (* src = "Phy_Tx_synth.v:39.7-39.19" *)
  wire validOutL1_0;
  (* src = "Phy_Tx_synth.v:39.21-39.33" *)
  wire validOutL1_1;
  (* src = "Phy_Tx_synth.v:39.35-39.45" *)
  wire validOutL2;
  (* src = "Phy_Tx_synth.v:28.13-28.35" *)
  output validOutProbador0_synth;
  (* src = "Phy_Tx_synth.v:29.13-29.35" *)
  output validOutProbador1_synth;
  (* src = "Phy_Tx_synth.v:30.13-30.35" *)
  output validOutProbador2_synth;
  (* src = "Phy_Tx_synth.v:31.13-31.35" *)
  output validOutProbador3_synth;
  (* module_not_derived = 32'd1 *)
  (* src = "Phy_Tx_synth.v:78.11-94.28" *)
  MuxL1_synth L1 (
    .clk(clk_2f),
    .dataIn0(dataOut0_synth),
    .dataIn1(dataOut1_synth),
    .dataIn2(dataOut2_synth),
    .dataIn3(dataOut3_synth),
    .dataOut0(dataOutL1_0),
    .dataOut1(dataOutL1_1),
    .reset(reset),
    .validIn0(validOut0_synth),
    .validIn1(validOut1_synth),
    .validIn2(validOut2_synth),
    .validIn3(validOut3_synth),
    .validOut0(validOutL1_0),
    .validOut1(validOutL1_1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "Phy_Tx_synth.v:96.9-106.28" *)
  MuxL2_synth L2 (
    .clk(clk_4f),
    .dataIn0(dataOutL1_0),
    .dataIn1(dataOutL1_1),
    .dataOut(dataOutL2),
    .reset(reset),
    .validIn0(validOutL1_0),
    .validIn1(validOutL1_1),
    .validOut(validOutL2)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "Phy_Tx_synth.v:108.26-115.42" *)
  ParaleloSerial_PhyTX_synth ParaleloSerial_PhyTX_synth_C (
    .clk(clk_32f),
    .inputP(dataOutL2),
    .outputS_synth(SerialOutTx_synth),
    .reset(reset),
    .validIn(validOutL2)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "Phy_Tx_synth.v:117.26-124.27" *)
  SerialParalelo_PhyTX_synth SerialParalelo_Tx_C (
    .IDLE_in(active),
    .IDLE_out_synth(IDLE_out),
    .clk_1(clk_32f),
    .clk_2(clk_4f),
    .reset(reset)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "Phy_Tx_synth.v:43.18-76.29" *)
  Recirculador_synth recirculador (
    .clk(clk_32f),
    .dataIn0(dataIn0),
    .dataIn1(dataIn1),
    .dataIn2(dataIn2),
    .dataIn3(dataIn3),
    .dataOut0_synth(dataOut0_synth),
    .dataOut1_synth(dataOut1_synth),
    .dataOut2_synth(dataOut2_synth),
    .dataOut3_synth(dataOut3_synth),
    .dataOut4_synth(dataOutProbador0_synth),
    .dataOut5_synth(dataOutProbador1_synth),
    .dataOut6_synth(dataOutProbador2_synth),
    .dataOut7_synth(dataOutProbador3_synth),
    .reset(reset),
    .selector_IDLE(IDLE_out),
    .validIn0(validIn0),
    .validIn1(validIn1),
    .validIn2(validIn2),
    .validIn3(validIn3),
    .validOut0_synth(validOut0_synth),
    .validOut1_synth(validOut1_synth),
    .validOut2_synth(validOut2_synth),
    .validOut3_synth(validOut3_synth),
    .validOut4_synth(validOutProbador0_synth),
    .validOut5_synth(validOutProbador1_synth),
    .validOut6_synth(validOutProbador2_synth),
    .validOut7_synth(validOutProbador3_synth)
  );
endmodule

(* src = "Recirculador_synth.v:2.1-114.10" *)
module Recirculador_synth(clk, dataIn0, dataIn1, dataIn2, dataIn3, validIn0, validIn1, validIn2, validIn3, selector_IDLE, reset, dataOut0_synth, dataOut1_synth, dataOut2_synth, dataOut3_synth, dataOut4_synth, dataOut5_synth, dataOut6_synth, dataOut7_synth, validOut0_synth, validOut1_synth, validOut2_synth, validOut3_synth, validOut4_synth, validOut5_synth, validOut6_synth, validOut7_synth);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire _298_;
  wire _299_;
  wire _300_;
  wire _301_;
  wire _302_;
  wire _303_;
  wire _304_;
  wire _305_;
  wire _306_;
  wire _307_;
  wire _308_;
  wire _309_;
  wire _310_;
  wire _311_;
  wire _312_;
  wire _313_;
  wire _314_;
  wire _315_;
  wire _316_;
  wire _317_;
  wire _318_;
  wire _319_;
  wire _320_;
  wire _321_;
  wire _322_;
  wire _323_;
  wire _324_;
  wire _325_;
  wire _326_;
  wire _327_;
  wire _328_;
  wire _329_;
  wire _330_;
  wire _331_;
  wire _332_;
  wire _333_;
  wire _334_;
  wire _335_;
  wire _336_;
  wire _337_;
  wire _338_;
  wire _339_;
  wire _340_;
  wire _341_;
  wire _342_;
  wire _343_;
  wire _344_;
  wire _345_;
  (* src = "Recirculador_synth.v:3.8-3.11" *)
  input clk;
  (* src = "Recirculador_synth.v:4.13-4.20" *)
  input [7:0] dataIn0;
  (* src = "Recirculador_synth.v:5.13-5.20" *)
  input [7:0] dataIn1;
  (* src = "Recirculador_synth.v:6.13-6.20" *)
  input [7:0] dataIn2;
  (* src = "Recirculador_synth.v:7.13-7.20" *)
  input [7:0] dataIn3;
  (* src = "Recirculador_synth.v:14.18-14.31" *)
  output [7:0] dataOut0_synth;
  (* src = "Recirculador_synth.v:15.21-15.34" *)
  output [7:0] dataOut1_synth;
  (* src = "Recirculador_synth.v:16.18-16.31" *)
  output [7:0] dataOut2_synth;
  (* src = "Recirculador_synth.v:17.21-17.34" *)
  output [7:0] dataOut3_synth;
  (* src = "Recirculador_synth.v:18.18-18.31" *)
  output [7:0] dataOut4_synth;
  (* src = "Recirculador_synth.v:19.21-19.34" *)
  output [7:0] dataOut5_synth;
  (* src = "Recirculador_synth.v:20.18-20.31" *)
  output [7:0] dataOut6_synth;
  (* src = "Recirculador_synth.v:21.21-21.34" *)
  output [7:0] dataOut7_synth;
  (* src = "Recirculador_synth.v:13.8-13.13" *)
  input reset;
  (* src = "Recirculador_synth.v:12.8-12.21" *)
  input selector_IDLE;
  (* src = "Recirculador_synth.v:8.8-8.16" *)
  input validIn0;
  (* src = "Recirculador_synth.v:9.11-9.19" *)
  input validIn1;
  (* src = "Recirculador_synth.v:10.11-10.19" *)
  input validIn2;
  (* src = "Recirculador_synth.v:11.11-11.19" *)
  input validIn3;
  (* src = "Recirculador_synth.v:22.13-22.27" *)
  output validOut0_synth;
  (* src = "Recirculador_synth.v:23.13-23.27" *)
  output validOut1_synth;
  (* src = "Recirculador_synth.v:24.13-24.27" *)
  output validOut2_synth;
  (* src = "Recirculador_synth.v:25.13-25.27" *)
  output validOut3_synth;
  (* src = "Recirculador_synth.v:26.13-26.27" *)
  output validOut4_synth;
  (* src = "Recirculador_synth.v:27.13-27.27" *)
  output validOut5_synth;
  (* src = "Recirculador_synth.v:28.13-28.27" *)
  output validOut6_synth;
  (* src = "Recirculador_synth.v:29.13-29.27" *)
  output validOut7_synth;
  NOT _346_ (
    .A(validIn3),
    .Y(_072_)
  );
  NOT _347_ (
    .A(selector_IDLE),
    .Y(_073_)
  );
  NOT _348_ (
    .A(validIn2),
    .Y(_074_)
  );
  NOT _349_ (
    .A(validIn1),
    .Y(_075_)
  );
  NOT _350_ (
    .A(validIn0),
    .Y(_076_)
  );
  NOT _351_ (
    .A(dataIn3[7]),
    .Y(_077_)
  );
  NOT _352_ (
    .A(dataOut7_synth[7]),
    .Y(_078_)
  );
  NOT _353_ (
    .A(dataIn3[6]),
    .Y(_079_)
  );
  NOT _354_ (
    .A(dataOut7_synth[6]),
    .Y(_080_)
  );
  NOT _355_ (
    .A(dataIn3[5]),
    .Y(_081_)
  );
  NOT _356_ (
    .A(dataOut7_synth[5]),
    .Y(_082_)
  );
  NOT _357_ (
    .A(dataIn3[4]),
    .Y(_083_)
  );
  NOT _358_ (
    .A(dataOut7_synth[4]),
    .Y(_084_)
  );
  NOT _359_ (
    .A(dataIn3[3]),
    .Y(_085_)
  );
  NOT _360_ (
    .A(dataOut7_synth[3]),
    .Y(_086_)
  );
  NOT _361_ (
    .A(dataIn3[2]),
    .Y(_087_)
  );
  NOT _362_ (
    .A(dataOut7_synth[2]),
    .Y(_088_)
  );
  NOT _363_ (
    .A(dataIn3[1]),
    .Y(_089_)
  );
  NOT _364_ (
    .A(dataOut7_synth[1]),
    .Y(_090_)
  );
  NOT _365_ (
    .A(dataIn3[0]),
    .Y(_091_)
  );
  NOT _366_ (
    .A(dataOut7_synth[0]),
    .Y(_092_)
  );
  NOT _367_ (
    .A(dataIn2[7]),
    .Y(_093_)
  );
  NOT _368_ (
    .A(dataOut6_synth[7]),
    .Y(_094_)
  );
  NOT _369_ (
    .A(dataIn2[6]),
    .Y(_095_)
  );
  NOT _370_ (
    .A(dataOut6_synth[6]),
    .Y(_096_)
  );
  NOT _371_ (
    .A(dataIn2[5]),
    .Y(_097_)
  );
  NOT _372_ (
    .A(dataOut6_synth[5]),
    .Y(_098_)
  );
  NOT _373_ (
    .A(dataIn2[4]),
    .Y(_099_)
  );
  NOT _374_ (
    .A(dataOut6_synth[4]),
    .Y(_100_)
  );
  NOT _375_ (
    .A(dataIn2[3]),
    .Y(_101_)
  );
  NOT _376_ (
    .A(dataOut6_synth[3]),
    .Y(_102_)
  );
  NOT _377_ (
    .A(dataIn2[2]),
    .Y(_103_)
  );
  NOT _378_ (
    .A(dataOut6_synth[2]),
    .Y(_104_)
  );
  NOT _379_ (
    .A(dataIn2[1]),
    .Y(_105_)
  );
  NOT _380_ (
    .A(dataOut6_synth[1]),
    .Y(_106_)
  );
  NOT _381_ (
    .A(dataIn2[0]),
    .Y(_107_)
  );
  NOT _382_ (
    .A(dataOut6_synth[0]),
    .Y(_108_)
  );
  NOT _383_ (
    .A(dataIn1[7]),
    .Y(_109_)
  );
  NOT _384_ (
    .A(dataOut5_synth[7]),
    .Y(_110_)
  );
  NOT _385_ (
    .A(dataIn1[6]),
    .Y(_111_)
  );
  NOT _386_ (
    .A(dataOut5_synth[6]),
    .Y(_112_)
  );
  NOT _387_ (
    .A(dataIn1[5]),
    .Y(_113_)
  );
  NOT _388_ (
    .A(dataOut5_synth[5]),
    .Y(_114_)
  );
  NOT _389_ (
    .A(dataIn1[4]),
    .Y(_115_)
  );
  NOT _390_ (
    .A(dataOut5_synth[4]),
    .Y(_116_)
  );
  NOT _391_ (
    .A(dataIn1[3]),
    .Y(_117_)
  );
  NOT _392_ (
    .A(dataOut5_synth[3]),
    .Y(_118_)
  );
  NOT _393_ (
    .A(dataIn1[2]),
    .Y(_119_)
  );
  NOT _394_ (
    .A(dataOut5_synth[2]),
    .Y(_120_)
  );
  NOT _395_ (
    .A(dataIn1[1]),
    .Y(_121_)
  );
  NOT _396_ (
    .A(dataOut5_synth[1]),
    .Y(_122_)
  );
  NOT _397_ (
    .A(dataIn1[0]),
    .Y(_123_)
  );
  NOT _398_ (
    .A(dataOut5_synth[0]),
    .Y(_124_)
  );
  NOT _399_ (
    .A(dataIn0[7]),
    .Y(_125_)
  );
  NOT _400_ (
    .A(dataOut4_synth[7]),
    .Y(_126_)
  );
  NOT _401_ (
    .A(dataIn0[6]),
    .Y(_127_)
  );
  NOT _402_ (
    .A(dataOut4_synth[6]),
    .Y(_128_)
  );
  NOT _403_ (
    .A(dataIn0[5]),
    .Y(_129_)
  );
  NOT _404_ (
    .A(dataOut4_synth[5]),
    .Y(_130_)
  );
  NOT _405_ (
    .A(dataIn0[4]),
    .Y(_131_)
  );
  NOT _406_ (
    .A(dataOut4_synth[4]),
    .Y(_132_)
  );
  NOT _407_ (
    .A(dataIn0[3]),
    .Y(_133_)
  );
  NOT _408_ (
    .A(dataOut4_synth[3]),
    .Y(_134_)
  );
  NOT _409_ (
    .A(dataIn0[2]),
    .Y(_135_)
  );
  NOT _410_ (
    .A(dataOut4_synth[2]),
    .Y(_136_)
  );
  NOT _411_ (
    .A(dataIn0[1]),
    .Y(_137_)
  );
  NOT _412_ (
    .A(dataOut4_synth[1]),
    .Y(_138_)
  );
  NOT _413_ (
    .A(dataIn0[0]),
    .Y(_139_)
  );
  NOT _414_ (
    .A(dataOut4_synth[0]),
    .Y(_140_)
  );
  NOR _415_ (
    .A(selector_IDLE),
    .B(validOut2_synth),
    .Y(_141_)
  );
  NAND _416_ (
    .A(_073_),
    .B(reset),
    .Y(_142_)
  );
  NAND _417_ (
    .A(selector_IDLE),
    .B(_074_),
    .Y(_143_)
  );
  NAND _418_ (
    .A(reset),
    .B(_143_),
    .Y(_144_)
  );
  NOR _419_ (
    .A(_141_),
    .B(_144_),
    .Y(_070_)
  );
  NOR _420_ (
    .A(selector_IDLE),
    .B(validOut1_synth),
    .Y(_145_)
  );
  NAND _421_ (
    .A(selector_IDLE),
    .B(_075_),
    .Y(_146_)
  );
  NAND _422_ (
    .A(reset),
    .B(_146_),
    .Y(_147_)
  );
  NOR _423_ (
    .A(_145_),
    .B(_147_),
    .Y(_069_)
  );
  NOR _424_ (
    .A(selector_IDLE),
    .B(validOut0_synth),
    .Y(_148_)
  );
  NAND _425_ (
    .A(selector_IDLE),
    .B(_076_),
    .Y(_149_)
  );
  NAND _426_ (
    .A(reset),
    .B(_149_),
    .Y(_150_)
  );
  NOR _427_ (
    .A(_148_),
    .B(_150_),
    .Y(_068_)
  );
  NOR _428_ (
    .A(selector_IDLE),
    .B(dataIn3[7]),
    .Y(_151_)
  );
  NAND _429_ (
    .A(selector_IDLE),
    .B(_078_),
    .Y(_152_)
  );
  NAND _430_ (
    .A(reset),
    .B(_152_),
    .Y(_153_)
  );
  NOR _431_ (
    .A(_151_),
    .B(_153_),
    .Y(_067_)
  );
  NOR _432_ (
    .A(selector_IDLE),
    .B(dataIn3[6]),
    .Y(_154_)
  );
  NAND _433_ (
    .A(selector_IDLE),
    .B(_080_),
    .Y(_155_)
  );
  NAND _434_ (
    .A(reset),
    .B(_155_),
    .Y(_156_)
  );
  NOR _435_ (
    .A(_154_),
    .B(_156_),
    .Y(_066_)
  );
  NOR _436_ (
    .A(selector_IDLE),
    .B(dataIn3[5]),
    .Y(_157_)
  );
  NAND _437_ (
    .A(selector_IDLE),
    .B(_082_),
    .Y(_158_)
  );
  NAND _438_ (
    .A(reset),
    .B(_158_),
    .Y(_159_)
  );
  NOR _439_ (
    .A(_157_),
    .B(_159_),
    .Y(_065_)
  );
  NOR _440_ (
    .A(selector_IDLE),
    .B(dataIn3[4]),
    .Y(_160_)
  );
  NAND _441_ (
    .A(selector_IDLE),
    .B(_084_),
    .Y(_161_)
  );
  NAND _442_ (
    .A(reset),
    .B(_161_),
    .Y(_162_)
  );
  NOR _443_ (
    .A(_160_),
    .B(_162_),
    .Y(_064_)
  );
  NOR _444_ (
    .A(selector_IDLE),
    .B(dataIn3[3]),
    .Y(_163_)
  );
  NAND _445_ (
    .A(selector_IDLE),
    .B(_086_),
    .Y(_164_)
  );
  NAND _446_ (
    .A(reset),
    .B(_164_),
    .Y(_165_)
  );
  NOR _447_ (
    .A(_163_),
    .B(_165_),
    .Y(_063_)
  );
  NOR _448_ (
    .A(selector_IDLE),
    .B(dataIn3[2]),
    .Y(_166_)
  );
  NAND _449_ (
    .A(selector_IDLE),
    .B(_088_),
    .Y(_167_)
  );
  NAND _450_ (
    .A(reset),
    .B(_167_),
    .Y(_168_)
  );
  NOR _451_ (
    .A(_166_),
    .B(_168_),
    .Y(_062_)
  );
  NOR _452_ (
    .A(selector_IDLE),
    .B(dataIn3[1]),
    .Y(_169_)
  );
  NAND _453_ (
    .A(selector_IDLE),
    .B(_090_),
    .Y(_170_)
  );
  NAND _454_ (
    .A(reset),
    .B(_170_),
    .Y(_171_)
  );
  NOR _455_ (
    .A(_169_),
    .B(_171_),
    .Y(_061_)
  );
  NOR _456_ (
    .A(selector_IDLE),
    .B(dataIn3[0]),
    .Y(_172_)
  );
  NAND _457_ (
    .A(selector_IDLE),
    .B(_092_),
    .Y(_173_)
  );
  NAND _458_ (
    .A(reset),
    .B(_173_),
    .Y(_174_)
  );
  NOR _459_ (
    .A(_172_),
    .B(_174_),
    .Y(_060_)
  );
  NOR _460_ (
    .A(selector_IDLE),
    .B(dataIn2[7]),
    .Y(_175_)
  );
  NAND _461_ (
    .A(selector_IDLE),
    .B(_094_),
    .Y(_176_)
  );
  NAND _462_ (
    .A(reset),
    .B(_176_),
    .Y(_177_)
  );
  NOR _463_ (
    .A(_175_),
    .B(_177_),
    .Y(_059_)
  );
  NOR _464_ (
    .A(selector_IDLE),
    .B(dataIn2[6]),
    .Y(_178_)
  );
  NAND _465_ (
    .A(selector_IDLE),
    .B(_096_),
    .Y(_179_)
  );
  NAND _466_ (
    .A(reset),
    .B(_179_),
    .Y(_180_)
  );
  NOR _467_ (
    .A(_178_),
    .B(_180_),
    .Y(_058_)
  );
  NOR _468_ (
    .A(selector_IDLE),
    .B(dataIn2[5]),
    .Y(_181_)
  );
  NAND _469_ (
    .A(selector_IDLE),
    .B(_098_),
    .Y(_182_)
  );
  NAND _470_ (
    .A(reset),
    .B(_182_),
    .Y(_183_)
  );
  NOR _471_ (
    .A(_181_),
    .B(_183_),
    .Y(_057_)
  );
  NOR _472_ (
    .A(selector_IDLE),
    .B(dataIn2[4]),
    .Y(_184_)
  );
  NAND _473_ (
    .A(selector_IDLE),
    .B(_100_),
    .Y(_185_)
  );
  NAND _474_ (
    .A(reset),
    .B(_185_),
    .Y(_186_)
  );
  NOR _475_ (
    .A(_184_),
    .B(_186_),
    .Y(_056_)
  );
  NOR _476_ (
    .A(selector_IDLE),
    .B(dataIn2[3]),
    .Y(_187_)
  );
  NAND _477_ (
    .A(selector_IDLE),
    .B(_102_),
    .Y(_188_)
  );
  NAND _478_ (
    .A(reset),
    .B(_188_),
    .Y(_189_)
  );
  NOR _479_ (
    .A(_187_),
    .B(_189_),
    .Y(_055_)
  );
  NOR _480_ (
    .A(selector_IDLE),
    .B(dataIn2[2]),
    .Y(_190_)
  );
  NAND _481_ (
    .A(selector_IDLE),
    .B(_104_),
    .Y(_191_)
  );
  NAND _482_ (
    .A(reset),
    .B(_191_),
    .Y(_192_)
  );
  NOR _483_ (
    .A(_190_),
    .B(_192_),
    .Y(_054_)
  );
  NOR _484_ (
    .A(selector_IDLE),
    .B(dataIn2[1]),
    .Y(_193_)
  );
  NAND _485_ (
    .A(selector_IDLE),
    .B(_106_),
    .Y(_194_)
  );
  NAND _486_ (
    .A(reset),
    .B(_194_),
    .Y(_195_)
  );
  NOR _487_ (
    .A(_193_),
    .B(_195_),
    .Y(_053_)
  );
  NOR _488_ (
    .A(selector_IDLE),
    .B(dataIn2[0]),
    .Y(_196_)
  );
  NAND _489_ (
    .A(selector_IDLE),
    .B(_108_),
    .Y(_197_)
  );
  NAND _490_ (
    .A(reset),
    .B(_197_),
    .Y(_198_)
  );
  NOR _491_ (
    .A(_196_),
    .B(_198_),
    .Y(_052_)
  );
  NOR _492_ (
    .A(selector_IDLE),
    .B(dataIn1[7]),
    .Y(_199_)
  );
  NAND _493_ (
    .A(selector_IDLE),
    .B(_110_),
    .Y(_200_)
  );
  NAND _494_ (
    .A(reset),
    .B(_200_),
    .Y(_201_)
  );
  NOR _495_ (
    .A(_199_),
    .B(_201_),
    .Y(_051_)
  );
  NOR _496_ (
    .A(selector_IDLE),
    .B(dataIn1[6]),
    .Y(_202_)
  );
  NAND _497_ (
    .A(selector_IDLE),
    .B(_112_),
    .Y(_203_)
  );
  NAND _498_ (
    .A(reset),
    .B(_203_),
    .Y(_204_)
  );
  NOR _499_ (
    .A(_202_),
    .B(_204_),
    .Y(_050_)
  );
  NOR _500_ (
    .A(selector_IDLE),
    .B(dataIn1[5]),
    .Y(_205_)
  );
  NAND _501_ (
    .A(selector_IDLE),
    .B(_114_),
    .Y(_206_)
  );
  NAND _502_ (
    .A(reset),
    .B(_206_),
    .Y(_207_)
  );
  NOR _503_ (
    .A(_205_),
    .B(_207_),
    .Y(_049_)
  );
  NOR _504_ (
    .A(selector_IDLE),
    .B(dataIn1[4]),
    .Y(_208_)
  );
  NAND _505_ (
    .A(selector_IDLE),
    .B(_116_),
    .Y(_209_)
  );
  NAND _506_ (
    .A(reset),
    .B(_209_),
    .Y(_210_)
  );
  NOR _507_ (
    .A(_208_),
    .B(_210_),
    .Y(_048_)
  );
  NOR _508_ (
    .A(selector_IDLE),
    .B(dataIn1[3]),
    .Y(_211_)
  );
  NAND _509_ (
    .A(selector_IDLE),
    .B(_118_),
    .Y(_212_)
  );
  NAND _510_ (
    .A(reset),
    .B(_212_),
    .Y(_213_)
  );
  NOR _511_ (
    .A(_211_),
    .B(_213_),
    .Y(_047_)
  );
  NOR _512_ (
    .A(selector_IDLE),
    .B(dataIn1[2]),
    .Y(_214_)
  );
  NAND _513_ (
    .A(selector_IDLE),
    .B(_120_),
    .Y(_215_)
  );
  NAND _514_ (
    .A(reset),
    .B(_215_),
    .Y(_216_)
  );
  NOR _515_ (
    .A(_214_),
    .B(_216_),
    .Y(_046_)
  );
  NOR _516_ (
    .A(selector_IDLE),
    .B(dataIn1[1]),
    .Y(_217_)
  );
  NAND _517_ (
    .A(selector_IDLE),
    .B(_122_),
    .Y(_218_)
  );
  NAND _518_ (
    .A(reset),
    .B(_218_),
    .Y(_219_)
  );
  NOR _519_ (
    .A(_217_),
    .B(_219_),
    .Y(_045_)
  );
  NOR _520_ (
    .A(selector_IDLE),
    .B(dataIn1[0]),
    .Y(_220_)
  );
  NAND _521_ (
    .A(selector_IDLE),
    .B(_124_),
    .Y(_221_)
  );
  NAND _522_ (
    .A(reset),
    .B(_221_),
    .Y(_222_)
  );
  NOR _523_ (
    .A(_220_),
    .B(_222_),
    .Y(_044_)
  );
  NOR _524_ (
    .A(selector_IDLE),
    .B(dataIn0[7]),
    .Y(_223_)
  );
  NAND _525_ (
    .A(selector_IDLE),
    .B(_126_),
    .Y(_224_)
  );
  NAND _526_ (
    .A(reset),
    .B(_224_),
    .Y(_225_)
  );
  NOR _527_ (
    .A(_223_),
    .B(_225_),
    .Y(_043_)
  );
  NOR _528_ (
    .A(selector_IDLE),
    .B(dataIn0[6]),
    .Y(_226_)
  );
  NAND _529_ (
    .A(selector_IDLE),
    .B(_128_),
    .Y(_227_)
  );
  NAND _530_ (
    .A(reset),
    .B(_227_),
    .Y(_228_)
  );
  NOR _531_ (
    .A(_226_),
    .B(_228_),
    .Y(_042_)
  );
  NOR _532_ (
    .A(selector_IDLE),
    .B(dataIn0[5]),
    .Y(_229_)
  );
  NAND _533_ (
    .A(selector_IDLE),
    .B(_130_),
    .Y(_230_)
  );
  NAND _534_ (
    .A(reset),
    .B(_230_),
    .Y(_231_)
  );
  NOR _535_ (
    .A(_229_),
    .B(_231_),
    .Y(_041_)
  );
  NOR _536_ (
    .A(selector_IDLE),
    .B(dataIn0[4]),
    .Y(_232_)
  );
  NAND _537_ (
    .A(selector_IDLE),
    .B(_132_),
    .Y(_233_)
  );
  NAND _538_ (
    .A(reset),
    .B(_233_),
    .Y(_234_)
  );
  NOR _539_ (
    .A(_232_),
    .B(_234_),
    .Y(_040_)
  );
  NOR _540_ (
    .A(selector_IDLE),
    .B(dataIn0[3]),
    .Y(_235_)
  );
  NAND _541_ (
    .A(selector_IDLE),
    .B(_134_),
    .Y(_236_)
  );
  NAND _542_ (
    .A(reset),
    .B(_236_),
    .Y(_237_)
  );
  NOR _543_ (
    .A(_235_),
    .B(_237_),
    .Y(_039_)
  );
  NOR _544_ (
    .A(selector_IDLE),
    .B(dataIn0[2]),
    .Y(_238_)
  );
  NAND _545_ (
    .A(selector_IDLE),
    .B(_136_),
    .Y(_239_)
  );
  NAND _546_ (
    .A(reset),
    .B(_239_),
    .Y(_240_)
  );
  NOR _547_ (
    .A(_238_),
    .B(_240_),
    .Y(_038_)
  );
  NOR _548_ (
    .A(selector_IDLE),
    .B(dataIn0[1]),
    .Y(_241_)
  );
  NAND _549_ (
    .A(selector_IDLE),
    .B(_138_),
    .Y(_242_)
  );
  NAND _550_ (
    .A(reset),
    .B(_242_),
    .Y(_243_)
  );
  NOR _551_ (
    .A(_241_),
    .B(_243_),
    .Y(_037_)
  );
  NOR _552_ (
    .A(selector_IDLE),
    .B(dataIn0[0]),
    .Y(_244_)
  );
  NAND _553_ (
    .A(selector_IDLE),
    .B(_140_),
    .Y(_245_)
  );
  NAND _554_ (
    .A(reset),
    .B(_245_),
    .Y(_246_)
  );
  NOR _555_ (
    .A(_244_),
    .B(_246_),
    .Y(_036_)
  );
  NOR _556_ (
    .A(selector_IDLE),
    .B(dataOut3_synth[7]),
    .Y(_247_)
  );
  NAND _557_ (
    .A(selector_IDLE),
    .B(_077_),
    .Y(_248_)
  );
  NAND _558_ (
    .A(reset),
    .B(_248_),
    .Y(_249_)
  );
  NOR _559_ (
    .A(_247_),
    .B(_249_),
    .Y(_035_)
  );
  NOR _560_ (
    .A(selector_IDLE),
    .B(dataOut3_synth[6]),
    .Y(_250_)
  );
  NAND _561_ (
    .A(selector_IDLE),
    .B(_079_),
    .Y(_251_)
  );
  NAND _562_ (
    .A(reset),
    .B(_251_),
    .Y(_252_)
  );
  NOR _563_ (
    .A(_250_),
    .B(_252_),
    .Y(_034_)
  );
  NOR _564_ (
    .A(selector_IDLE),
    .B(dataOut3_synth[5]),
    .Y(_253_)
  );
  NAND _565_ (
    .A(selector_IDLE),
    .B(_081_),
    .Y(_254_)
  );
  NAND _566_ (
    .A(reset),
    .B(_254_),
    .Y(_255_)
  );
  NOR _567_ (
    .A(_253_),
    .B(_255_),
    .Y(_033_)
  );
  NOR _568_ (
    .A(selector_IDLE),
    .B(dataOut3_synth[4]),
    .Y(_256_)
  );
  NAND _569_ (
    .A(selector_IDLE),
    .B(_083_),
    .Y(_257_)
  );
  NAND _570_ (
    .A(reset),
    .B(_257_),
    .Y(_258_)
  );
  NOR _571_ (
    .A(_256_),
    .B(_258_),
    .Y(_032_)
  );
  NOR _572_ (
    .A(selector_IDLE),
    .B(dataOut3_synth[3]),
    .Y(_259_)
  );
  NAND _573_ (
    .A(selector_IDLE),
    .B(_085_),
    .Y(_260_)
  );
  NAND _574_ (
    .A(reset),
    .B(_260_),
    .Y(_261_)
  );
  NOR _575_ (
    .A(_259_),
    .B(_261_),
    .Y(_031_)
  );
  NOR _576_ (
    .A(selector_IDLE),
    .B(dataOut3_synth[2]),
    .Y(_262_)
  );
  NAND _577_ (
    .A(selector_IDLE),
    .B(_087_),
    .Y(_263_)
  );
  NAND _578_ (
    .A(reset),
    .B(_263_),
    .Y(_264_)
  );
  NOR _579_ (
    .A(_262_),
    .B(_264_),
    .Y(_030_)
  );
  NOR _580_ (
    .A(selector_IDLE),
    .B(dataOut3_synth[1]),
    .Y(_265_)
  );
  NAND _581_ (
    .A(selector_IDLE),
    .B(_089_),
    .Y(_266_)
  );
  NAND _582_ (
    .A(reset),
    .B(_266_),
    .Y(_267_)
  );
  NOR _583_ (
    .A(_265_),
    .B(_267_),
    .Y(_029_)
  );
  NOR _584_ (
    .A(selector_IDLE),
    .B(dataOut3_synth[0]),
    .Y(_268_)
  );
  NAND _585_ (
    .A(selector_IDLE),
    .B(_091_),
    .Y(_269_)
  );
  NAND _586_ (
    .A(reset),
    .B(_269_),
    .Y(_270_)
  );
  NOR _587_ (
    .A(_268_),
    .B(_270_),
    .Y(_028_)
  );
  NOR _588_ (
    .A(selector_IDLE),
    .B(dataOut2_synth[7]),
    .Y(_271_)
  );
  NAND _589_ (
    .A(selector_IDLE),
    .B(_093_),
    .Y(_272_)
  );
  NAND _590_ (
    .A(reset),
    .B(_272_),
    .Y(_273_)
  );
  NOR _591_ (
    .A(_271_),
    .B(_273_),
    .Y(_027_)
  );
  NOR _592_ (
    .A(selector_IDLE),
    .B(dataOut2_synth[6]),
    .Y(_274_)
  );
  NAND _593_ (
    .A(selector_IDLE),
    .B(_095_),
    .Y(_275_)
  );
  NAND _594_ (
    .A(reset),
    .B(_275_),
    .Y(_276_)
  );
  NOR _595_ (
    .A(_274_),
    .B(_276_),
    .Y(_026_)
  );
  NOR _596_ (
    .A(selector_IDLE),
    .B(dataOut2_synth[5]),
    .Y(_277_)
  );
  NAND _597_ (
    .A(selector_IDLE),
    .B(_097_),
    .Y(_278_)
  );
  NAND _598_ (
    .A(reset),
    .B(_278_),
    .Y(_279_)
  );
  NOR _599_ (
    .A(_277_),
    .B(_279_),
    .Y(_025_)
  );
  NOR _600_ (
    .A(selector_IDLE),
    .B(dataOut2_synth[4]),
    .Y(_280_)
  );
  NAND _601_ (
    .A(selector_IDLE),
    .B(_099_),
    .Y(_281_)
  );
  NAND _602_ (
    .A(reset),
    .B(_281_),
    .Y(_282_)
  );
  NOR _603_ (
    .A(_280_),
    .B(_282_),
    .Y(_024_)
  );
  NOR _604_ (
    .A(selector_IDLE),
    .B(dataOut2_synth[3]),
    .Y(_283_)
  );
  NAND _605_ (
    .A(selector_IDLE),
    .B(_101_),
    .Y(_284_)
  );
  NAND _606_ (
    .A(reset),
    .B(_284_),
    .Y(_285_)
  );
  NOR _607_ (
    .A(_283_),
    .B(_285_),
    .Y(_023_)
  );
  NOR _608_ (
    .A(selector_IDLE),
    .B(dataOut2_synth[2]),
    .Y(_286_)
  );
  NAND _609_ (
    .A(selector_IDLE),
    .B(_103_),
    .Y(_287_)
  );
  NAND _610_ (
    .A(reset),
    .B(_287_),
    .Y(_288_)
  );
  NOR _611_ (
    .A(_286_),
    .B(_288_),
    .Y(_022_)
  );
  NOR _612_ (
    .A(selector_IDLE),
    .B(dataOut2_synth[1]),
    .Y(_289_)
  );
  NAND _613_ (
    .A(selector_IDLE),
    .B(_105_),
    .Y(_290_)
  );
  NAND _614_ (
    .A(reset),
    .B(_290_),
    .Y(_291_)
  );
  NOR _615_ (
    .A(_289_),
    .B(_291_),
    .Y(_021_)
  );
  NOR _616_ (
    .A(selector_IDLE),
    .B(dataOut2_synth[0]),
    .Y(_292_)
  );
  NAND _617_ (
    .A(selector_IDLE),
    .B(_107_),
    .Y(_293_)
  );
  NAND _618_ (
    .A(reset),
    .B(_293_),
    .Y(_294_)
  );
  NOR _619_ (
    .A(_292_),
    .B(_294_),
    .Y(_020_)
  );
  NOR _620_ (
    .A(selector_IDLE),
    .B(dataOut1_synth[7]),
    .Y(_295_)
  );
  NAND _621_ (
    .A(selector_IDLE),
    .B(_109_),
    .Y(_296_)
  );
  NAND _622_ (
    .A(reset),
    .B(_296_),
    .Y(_297_)
  );
  NOR _623_ (
    .A(_295_),
    .B(_297_),
    .Y(_019_)
  );
  NOR _624_ (
    .A(selector_IDLE),
    .B(dataOut1_synth[6]),
    .Y(_298_)
  );
  NAND _625_ (
    .A(selector_IDLE),
    .B(_111_),
    .Y(_299_)
  );
  NAND _626_ (
    .A(reset),
    .B(_299_),
    .Y(_300_)
  );
  NOR _627_ (
    .A(_298_),
    .B(_300_),
    .Y(_018_)
  );
  NOR _628_ (
    .A(selector_IDLE),
    .B(dataOut1_synth[5]),
    .Y(_301_)
  );
  NAND _629_ (
    .A(selector_IDLE),
    .B(_113_),
    .Y(_302_)
  );
  NAND _630_ (
    .A(reset),
    .B(_302_),
    .Y(_303_)
  );
  NOR _631_ (
    .A(_301_),
    .B(_303_),
    .Y(_017_)
  );
  NOR _632_ (
    .A(selector_IDLE),
    .B(dataOut1_synth[4]),
    .Y(_304_)
  );
  NAND _633_ (
    .A(selector_IDLE),
    .B(_115_),
    .Y(_305_)
  );
  NAND _634_ (
    .A(reset),
    .B(_305_),
    .Y(_306_)
  );
  NOR _635_ (
    .A(_304_),
    .B(_306_),
    .Y(_016_)
  );
  NOR _636_ (
    .A(selector_IDLE),
    .B(dataOut1_synth[3]),
    .Y(_307_)
  );
  NAND _637_ (
    .A(selector_IDLE),
    .B(_117_),
    .Y(_308_)
  );
  NAND _638_ (
    .A(reset),
    .B(_308_),
    .Y(_309_)
  );
  NOR _639_ (
    .A(_307_),
    .B(_309_),
    .Y(_015_)
  );
  NOR _640_ (
    .A(selector_IDLE),
    .B(dataOut1_synth[2]),
    .Y(_310_)
  );
  NAND _641_ (
    .A(selector_IDLE),
    .B(_119_),
    .Y(_311_)
  );
  NAND _642_ (
    .A(reset),
    .B(_311_),
    .Y(_312_)
  );
  NOR _643_ (
    .A(_310_),
    .B(_312_),
    .Y(_014_)
  );
  NOR _644_ (
    .A(selector_IDLE),
    .B(dataOut1_synth[1]),
    .Y(_313_)
  );
  NAND _645_ (
    .A(selector_IDLE),
    .B(_121_),
    .Y(_314_)
  );
  NAND _646_ (
    .A(reset),
    .B(_314_),
    .Y(_315_)
  );
  NOR _647_ (
    .A(_313_),
    .B(_315_),
    .Y(_013_)
  );
  NOR _648_ (
    .A(selector_IDLE),
    .B(dataOut1_synth[0]),
    .Y(_316_)
  );
  NAND _649_ (
    .A(selector_IDLE),
    .B(_123_),
    .Y(_317_)
  );
  NAND _650_ (
    .A(reset),
    .B(_317_),
    .Y(_318_)
  );
  NOR _651_ (
    .A(_316_),
    .B(_318_),
    .Y(_012_)
  );
  NOR _652_ (
    .A(selector_IDLE),
    .B(dataOut0_synth[7]),
    .Y(_319_)
  );
  NAND _653_ (
    .A(selector_IDLE),
    .B(_125_),
    .Y(_320_)
  );
  NAND _654_ (
    .A(reset),
    .B(_320_),
    .Y(_321_)
  );
  NOR _655_ (
    .A(_319_),
    .B(_321_),
    .Y(_011_)
  );
  NOR _656_ (
    .A(selector_IDLE),
    .B(dataOut0_synth[6]),
    .Y(_322_)
  );
  NAND _657_ (
    .A(selector_IDLE),
    .B(_127_),
    .Y(_323_)
  );
  NAND _658_ (
    .A(reset),
    .B(_323_),
    .Y(_324_)
  );
  NOR _659_ (
    .A(_322_),
    .B(_324_),
    .Y(_010_)
  );
  NOR _660_ (
    .A(selector_IDLE),
    .B(dataOut0_synth[5]),
    .Y(_325_)
  );
  NAND _661_ (
    .A(selector_IDLE),
    .B(_129_),
    .Y(_326_)
  );
  NAND _662_ (
    .A(reset),
    .B(_326_),
    .Y(_327_)
  );
  NOR _663_ (
    .A(_325_),
    .B(_327_),
    .Y(_009_)
  );
  NOR _664_ (
    .A(selector_IDLE),
    .B(dataOut0_synth[4]),
    .Y(_328_)
  );
  NAND _665_ (
    .A(selector_IDLE),
    .B(_131_),
    .Y(_329_)
  );
  NAND _666_ (
    .A(reset),
    .B(_329_),
    .Y(_330_)
  );
  NOR _667_ (
    .A(_328_),
    .B(_330_),
    .Y(_008_)
  );
  NOR _668_ (
    .A(selector_IDLE),
    .B(dataOut0_synth[3]),
    .Y(_331_)
  );
  NAND _669_ (
    .A(selector_IDLE),
    .B(_133_),
    .Y(_332_)
  );
  NAND _670_ (
    .A(reset),
    .B(_332_),
    .Y(_333_)
  );
  NOR _671_ (
    .A(_331_),
    .B(_333_),
    .Y(_007_)
  );
  NOR _672_ (
    .A(selector_IDLE),
    .B(dataOut0_synth[2]),
    .Y(_334_)
  );
  NAND _673_ (
    .A(selector_IDLE),
    .B(_135_),
    .Y(_335_)
  );
  NAND _674_ (
    .A(reset),
    .B(_335_),
    .Y(_336_)
  );
  NOR _675_ (
    .A(_334_),
    .B(_336_),
    .Y(_006_)
  );
  NOR _676_ (
    .A(selector_IDLE),
    .B(dataOut0_synth[1]),
    .Y(_337_)
  );
  NAND _677_ (
    .A(selector_IDLE),
    .B(_137_),
    .Y(_338_)
  );
  NAND _678_ (
    .A(reset),
    .B(_338_),
    .Y(_339_)
  );
  NOR _679_ (
    .A(_337_),
    .B(_339_),
    .Y(_005_)
  );
  NOR _680_ (
    .A(selector_IDLE),
    .B(dataOut0_synth[0]),
    .Y(_340_)
  );
  NAND _681_ (
    .A(selector_IDLE),
    .B(_139_),
    .Y(_341_)
  );
  NAND _682_ (
    .A(reset),
    .B(_341_),
    .Y(_342_)
  );
  NOR _683_ (
    .A(_340_),
    .B(_342_),
    .Y(_004_)
  );
  NOR _684_ (
    .A(_075_),
    .B(_142_),
    .Y(_003_)
  );
  NOR _685_ (
    .A(_076_),
    .B(_142_),
    .Y(_002_)
  );
  NOR _686_ (
    .A(_074_),
    .B(_142_),
    .Y(_001_)
  );
  NOR _687_ (
    .A(_072_),
    .B(_142_),
    .Y(_000_)
  );
  NOR _688_ (
    .A(validOut3_synth),
    .B(selector_IDLE),
    .Y(_343_)
  );
  NAND _689_ (
    .A(_072_),
    .B(selector_IDLE),
    .Y(_344_)
  );
  NAND _690_ (
    .A(reset),
    .B(_344_),
    .Y(_345_)
  );
  NOR _691_ (
    .A(_343_),
    .B(_345_),
    .Y(_071_)
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _692_ (
    .C(selector_IDLE),
    .D(dataIn0[0]),
    .Q(dataOut4_synth[0])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _693_ (
    .C(selector_IDLE),
    .D(dataIn0[1]),
    .Q(dataOut4_synth[1])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _694_ (
    .C(selector_IDLE),
    .D(dataIn0[2]),
    .Q(dataOut4_synth[2])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _695_ (
    .C(selector_IDLE),
    .D(dataIn0[3]),
    .Q(dataOut4_synth[3])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _696_ (
    .C(selector_IDLE),
    .D(dataIn0[4]),
    .Q(dataOut4_synth[4])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _697_ (
    .C(selector_IDLE),
    .D(dataIn0[5]),
    .Q(dataOut4_synth[5])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _698_ (
    .C(selector_IDLE),
    .D(dataIn0[6]),
    .Q(dataOut4_synth[6])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _699_ (
    .C(selector_IDLE),
    .D(dataIn0[7]),
    .Q(dataOut4_synth[7])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _700_ (
    .C(selector_IDLE),
    .D(dataIn1[0]),
    .Q(dataOut5_synth[0])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _701_ (
    .C(selector_IDLE),
    .D(dataIn1[1]),
    .Q(dataOut5_synth[1])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _702_ (
    .C(selector_IDLE),
    .D(dataIn1[2]),
    .Q(dataOut5_synth[2])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _703_ (
    .C(selector_IDLE),
    .D(dataIn1[3]),
    .Q(dataOut5_synth[3])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _704_ (
    .C(selector_IDLE),
    .D(dataIn1[4]),
    .Q(dataOut5_synth[4])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _705_ (
    .C(selector_IDLE),
    .D(dataIn1[5]),
    .Q(dataOut5_synth[5])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _706_ (
    .C(selector_IDLE),
    .D(dataIn1[6]),
    .Q(dataOut5_synth[6])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _707_ (
    .C(selector_IDLE),
    .D(dataIn1[7]),
    .Q(dataOut5_synth[7])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _708_ (
    .C(selector_IDLE),
    .D(dataIn2[0]),
    .Q(dataOut6_synth[0])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _709_ (
    .C(selector_IDLE),
    .D(dataIn2[1]),
    .Q(dataOut6_synth[1])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _710_ (
    .C(selector_IDLE),
    .D(dataIn2[2]),
    .Q(dataOut6_synth[2])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _711_ (
    .C(selector_IDLE),
    .D(dataIn2[3]),
    .Q(dataOut6_synth[3])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _712_ (
    .C(selector_IDLE),
    .D(dataIn2[4]),
    .Q(dataOut6_synth[4])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _713_ (
    .C(selector_IDLE),
    .D(dataIn2[5]),
    .Q(dataOut6_synth[5])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _714_ (
    .C(selector_IDLE),
    .D(dataIn2[6]),
    .Q(dataOut6_synth[6])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _715_ (
    .C(selector_IDLE),
    .D(dataIn2[7]),
    .Q(dataOut6_synth[7])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _716_ (
    .C(selector_IDLE),
    .D(dataIn3[0]),
    .Q(dataOut7_synth[0])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _717_ (
    .C(selector_IDLE),
    .D(dataIn3[1]),
    .Q(dataOut7_synth[1])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _718_ (
    .C(selector_IDLE),
    .D(dataIn3[2]),
    .Q(dataOut7_synth[2])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _719_ (
    .C(selector_IDLE),
    .D(dataIn3[3]),
    .Q(dataOut7_synth[3])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _720_ (
    .C(selector_IDLE),
    .D(dataIn3[4]),
    .Q(dataOut7_synth[4])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _721_ (
    .C(selector_IDLE),
    .D(dataIn3[5]),
    .Q(dataOut7_synth[5])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _722_ (
    .C(selector_IDLE),
    .D(dataIn3[6]),
    .Q(dataOut7_synth[6])
  );
  (* src = "Recirculador_synth.v:106.1-112.5" *)
  DFF _723_ (
    .C(selector_IDLE),
    .D(dataIn3[7]),
    .Q(dataOut7_synth[7])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _724_ (
    .C(clk),
    .D(_000_),
    .Q(validOut7_synth)
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _725_ (
    .C(clk),
    .D(_001_),
    .Q(validOut6_synth)
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _726_ (
    .C(clk),
    .D(_002_),
    .Q(validOut4_synth)
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _727_ (
    .C(clk),
    .D(_003_),
    .Q(validOut5_synth)
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _728_ (
    .C(clk),
    .D(_004_),
    .Q(dataOut0_synth[0])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _729_ (
    .C(clk),
    .D(_005_),
    .Q(dataOut0_synth[1])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _730_ (
    .C(clk),
    .D(_006_),
    .Q(dataOut0_synth[2])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _731_ (
    .C(clk),
    .D(_007_),
    .Q(dataOut0_synth[3])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _732_ (
    .C(clk),
    .D(_008_),
    .Q(dataOut0_synth[4])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _733_ (
    .C(clk),
    .D(_009_),
    .Q(dataOut0_synth[5])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _734_ (
    .C(clk),
    .D(_010_),
    .Q(dataOut0_synth[6])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _735_ (
    .C(clk),
    .D(_011_),
    .Q(dataOut0_synth[7])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _736_ (
    .C(clk),
    .D(_012_),
    .Q(dataOut1_synth[0])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _737_ (
    .C(clk),
    .D(_013_),
    .Q(dataOut1_synth[1])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _738_ (
    .C(clk),
    .D(_014_),
    .Q(dataOut1_synth[2])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _739_ (
    .C(clk),
    .D(_015_),
    .Q(dataOut1_synth[3])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _740_ (
    .C(clk),
    .D(_016_),
    .Q(dataOut1_synth[4])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _741_ (
    .C(clk),
    .D(_017_),
    .Q(dataOut1_synth[5])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _742_ (
    .C(clk),
    .D(_018_),
    .Q(dataOut1_synth[6])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _743_ (
    .C(clk),
    .D(_019_),
    .Q(dataOut1_synth[7])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _744_ (
    .C(clk),
    .D(_020_),
    .Q(dataOut2_synth[0])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _745_ (
    .C(clk),
    .D(_021_),
    .Q(dataOut2_synth[1])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _746_ (
    .C(clk),
    .D(_022_),
    .Q(dataOut2_synth[2])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _747_ (
    .C(clk),
    .D(_023_),
    .Q(dataOut2_synth[3])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _748_ (
    .C(clk),
    .D(_024_),
    .Q(dataOut2_synth[4])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _749_ (
    .C(clk),
    .D(_025_),
    .Q(dataOut2_synth[5])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _750_ (
    .C(clk),
    .D(_026_),
    .Q(dataOut2_synth[6])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _751_ (
    .C(clk),
    .D(_027_),
    .Q(dataOut2_synth[7])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _752_ (
    .C(clk),
    .D(_028_),
    .Q(dataOut3_synth[0])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _753_ (
    .C(clk),
    .D(_029_),
    .Q(dataOut3_synth[1])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _754_ (
    .C(clk),
    .D(_030_),
    .Q(dataOut3_synth[2])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _755_ (
    .C(clk),
    .D(_031_),
    .Q(dataOut3_synth[3])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _756_ (
    .C(clk),
    .D(_032_),
    .Q(dataOut3_synth[4])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _757_ (
    .C(clk),
    .D(_033_),
    .Q(dataOut3_synth[5])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _758_ (
    .C(clk),
    .D(_034_),
    .Q(dataOut3_synth[6])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _759_ (
    .C(clk),
    .D(_035_),
    .Q(dataOut3_synth[7])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _760_ (
    .C(clk),
    .D(_036_),
    .Q(dataOut4_synth[0])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _761_ (
    .C(clk),
    .D(_037_),
    .Q(dataOut4_synth[1])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _762_ (
    .C(clk),
    .D(_038_),
    .Q(dataOut4_synth[2])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _763_ (
    .C(clk),
    .D(_039_),
    .Q(dataOut4_synth[3])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _764_ (
    .C(clk),
    .D(_040_),
    .Q(dataOut4_synth[4])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _765_ (
    .C(clk),
    .D(_041_),
    .Q(dataOut4_synth[5])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _766_ (
    .C(clk),
    .D(_042_),
    .Q(dataOut4_synth[6])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _767_ (
    .C(clk),
    .D(_043_),
    .Q(dataOut4_synth[7])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _768_ (
    .C(clk),
    .D(_044_),
    .Q(dataOut5_synth[0])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _769_ (
    .C(clk),
    .D(_045_),
    .Q(dataOut5_synth[1])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _770_ (
    .C(clk),
    .D(_046_),
    .Q(dataOut5_synth[2])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _771_ (
    .C(clk),
    .D(_047_),
    .Q(dataOut5_synth[3])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _772_ (
    .C(clk),
    .D(_048_),
    .Q(dataOut5_synth[4])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _773_ (
    .C(clk),
    .D(_049_),
    .Q(dataOut5_synth[5])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _774_ (
    .C(clk),
    .D(_050_),
    .Q(dataOut5_synth[6])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _775_ (
    .C(clk),
    .D(_051_),
    .Q(dataOut5_synth[7])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _776_ (
    .C(clk),
    .D(_052_),
    .Q(dataOut6_synth[0])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _777_ (
    .C(clk),
    .D(_053_),
    .Q(dataOut6_synth[1])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _778_ (
    .C(clk),
    .D(_054_),
    .Q(dataOut6_synth[2])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _779_ (
    .C(clk),
    .D(_055_),
    .Q(dataOut6_synth[3])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _780_ (
    .C(clk),
    .D(_056_),
    .Q(dataOut6_synth[4])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _781_ (
    .C(clk),
    .D(_057_),
    .Q(dataOut6_synth[5])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _782_ (
    .C(clk),
    .D(_058_),
    .Q(dataOut6_synth[6])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _783_ (
    .C(clk),
    .D(_059_),
    .Q(dataOut6_synth[7])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _784_ (
    .C(clk),
    .D(_060_),
    .Q(dataOut7_synth[0])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _785_ (
    .C(clk),
    .D(_061_),
    .Q(dataOut7_synth[1])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _786_ (
    .C(clk),
    .D(_062_),
    .Q(dataOut7_synth[2])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _787_ (
    .C(clk),
    .D(_063_),
    .Q(dataOut7_synth[3])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _788_ (
    .C(clk),
    .D(_064_),
    .Q(dataOut7_synth[4])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _789_ (
    .C(clk),
    .D(_065_),
    .Q(dataOut7_synth[5])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _790_ (
    .C(clk),
    .D(_066_),
    .Q(dataOut7_synth[6])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _791_ (
    .C(clk),
    .D(_067_),
    .Q(dataOut7_synth[7])
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _792_ (
    .C(clk),
    .D(_068_),
    .Q(validOut0_synth)
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _793_ (
    .C(clk),
    .D(_069_),
    .Q(validOut1_synth)
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _794_ (
    .C(clk),
    .D(_070_),
    .Q(validOut2_synth)
  );
  (* src = "Recirculador_synth.v:32.2-105.6" *)
  DFF _795_ (
    .C(clk),
    .D(_071_),
    .Q(validOut3_synth)
  );
endmodule

(* src = "SerialParalelo_PhyTX_synth.v:1.1-66.10" *)
module SerialParalelo_PhyTX_synth(clk_1, clk_2, reset, IDLE_in, IDLE_out_synth);
  (* src = "SerialParalelo_PhyTX_synth.v:57.2-65.6" *)
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  (* src = "SerialParalelo_PhyTX_synth.v:5.8-5.15" *)
  input IDLE_in;
  (* src = "SerialParalelo_PhyTX_synth.v:6.13-6.26" *)
  output IDLE_out_synth;
  (* src = "SerialParalelo_PhyTX_synth.v:9.6-9.12" *)
  wire active;
  (* src = "SerialParalelo_PhyTX_synth.v:2.8-2.13" *)
  input clk_1;
  (* src = "SerialParalelo_PhyTX_synth.v:3.8-3.13" *)
  input clk_2;
  (* init = 3'h0 *)
  (* src = "SerialParalelo_PhyTX_synth.v:10.12-10.24" *)
  wire [2:0] contador_COM;
  (* src = "SerialParalelo_PhyTX_synth.v:4.8-4.13" *)
  input reset;
  (* init = 3'h0 *)
  (* src = "SerialParalelo_PhyTX_synth.v:13.12-13.20" *)
  wire [2:0] selector;
  (* src = "SerialParalelo_PhyTX_synth.v:12.12-12.20" *)
  wire [7:0] temporal;
  NOT _087_ (
    .A(reset),
    .Y(_030_)
  );
  NOT _088_ (
    .A(contador_COM[1]),
    .Y(_031_)
  );
  NOT _089_ (
    .A(temporal[7]),
    .Y(_032_)
  );
  NOT _090_ (
    .A(selector[2]),
    .Y(_033_)
  );
  NOT _091_ (
    .A(selector[0]),
    .Y(_034_)
  );
  NOT _092_ (
    .A(selector[1]),
    .Y(_035_)
  );
  NAND _093_ (
    .A(selector[0]),
    .B(selector[1]),
    .Y(_036_)
  );
  NOT _094_ (
    .A(_036_),
    .Y(_037_)
  );
  NOR _095_ (
    .A(contador_COM[2]),
    .B(_032_),
    .Y(_038_)
  );
  NOR _096_ (
    .A(temporal[6]),
    .B(_033_),
    .Y(_039_)
  );
  NAND _097_ (
    .A(_038_),
    .B(_039_),
    .Y(_040_)
  );
  NOR _098_ (
    .A(_036_),
    .B(_040_),
    .Y(_041_)
  );
  NAND _099_ (
    .A(contador_COM[0]),
    .B(_041_),
    .Y(_042_)
  );
  NOR _100_ (
    .A(_031_),
    .B(_042_),
    .Y(_043_)
  );
  NAND _101_ (
    .A(_031_),
    .B(_042_),
    .Y(_044_)
  );
  NAND _102_ (
    .A(reset),
    .B(_044_),
    .Y(_045_)
  );
  NOR _103_ (
    .A(_043_),
    .B(_045_),
    .Y(_013_)
  );
  NOR _104_ (
    .A(contador_COM[0]),
    .B(_041_),
    .Y(_046_)
  );
  NAND _105_ (
    .A(reset),
    .B(_042_),
    .Y(_047_)
  );
  NOR _106_ (
    .A(_046_),
    .B(_047_),
    .Y(_012_)
  );
  NOR _107_ (
    .A(_030_),
    .B(selector[2]),
    .Y(_048_)
  );
  NAND _108_ (
    .A(reset),
    .B(_033_),
    .Y(_049_)
  );
  NOR _109_ (
    .A(_036_),
    .B(_049_),
    .Y(_050_)
  );
  NAND _110_ (
    .A(_037_),
    .B(_048_),
    .Y(_051_)
  );
  NAND _111_ (
    .A(reset),
    .B(_036_),
    .Y(_052_)
  );
  NOR _112_ (
    .A(_030_),
    .B(_033_),
    .Y(_053_)
  );
  NAND _113_ (
    .A(reset),
    .B(selector[2]),
    .Y(_054_)
  );
  NAND _114_ (
    .A(_036_),
    .B(_053_),
    .Y(_055_)
  );
  NAND _115_ (
    .A(_051_),
    .B(_055_),
    .Y(_011_)
  );
  NOR _116_ (
    .A(selector[0]),
    .B(selector[1]),
    .Y(_056_)
  );
  NOT _117_ (
    .A(_056_),
    .Y(_057_)
  );
  NOR _118_ (
    .A(_052_),
    .B(_056_),
    .Y(_010_)
  );
  NOR _119_ (
    .A(_030_),
    .B(selector[0]),
    .Y(_009_)
  );
  NAND _120_ (
    .A(IDLE_in),
    .B(_050_),
    .Y(_058_)
  );
  NAND _121_ (
    .A(temporal[4]),
    .B(_051_),
    .Y(_059_)
  );
  NAND _122_ (
    .A(_058_),
    .B(_059_),
    .Y(_008_)
  );
  NOR _123_ (
    .A(_054_),
    .B(_057_),
    .Y(_060_)
  );
  NAND _124_ (
    .A(_053_),
    .B(_056_),
    .Y(_061_)
  );
  NAND _125_ (
    .A(IDLE_in),
    .B(_060_),
    .Y(_062_)
  );
  NAND _126_ (
    .A(temporal[3]),
    .B(_061_),
    .Y(_063_)
  );
  NAND _127_ (
    .A(_062_),
    .B(_063_),
    .Y(_007_)
  );
  NOR _128_ (
    .A(_034_),
    .B(selector[1]),
    .Y(_064_)
  );
  NAND _129_ (
    .A(selector[0]),
    .B(_035_),
    .Y(_065_)
  );
  NOR _130_ (
    .A(_054_),
    .B(_065_),
    .Y(_066_)
  );
  NAND _131_ (
    .A(_053_),
    .B(_064_),
    .Y(_067_)
  );
  NAND _132_ (
    .A(IDLE_in),
    .B(_066_),
    .Y(_068_)
  );
  NAND _133_ (
    .A(temporal[2]),
    .B(_067_),
    .Y(_069_)
  );
  NAND _134_ (
    .A(_068_),
    .B(_069_),
    .Y(_006_)
  );
  NOR _135_ (
    .A(_036_),
    .B(_054_),
    .Y(_070_)
  );
  NOT _136_ (
    .A(_070_),
    .Y(_071_)
  );
  NAND _137_ (
    .A(IDLE_in),
    .B(_070_),
    .Y(_072_)
  );
  NAND _138_ (
    .A(temporal[0]),
    .B(_071_),
    .Y(_073_)
  );
  NAND _139_ (
    .A(_072_),
    .B(_073_),
    .Y(_005_)
  );
  NOR _140_ (
    .A(selector[0]),
    .B(_035_),
    .Y(_074_)
  );
  NAND _141_ (
    .A(_034_),
    .B(selector[1]),
    .Y(_075_)
  );
  NOR _142_ (
    .A(_054_),
    .B(_075_),
    .Y(_076_)
  );
  NAND _143_ (
    .A(_053_),
    .B(_074_),
    .Y(_077_)
  );
  NAND _144_ (
    .A(IDLE_in),
    .B(_076_),
    .Y(_078_)
  );
  NAND _145_ (
    .A(temporal[1]),
    .B(_077_),
    .Y(_079_)
  );
  NAND _146_ (
    .A(_078_),
    .B(_079_),
    .Y(_004_)
  );
  NOR _147_ (
    .A(_049_),
    .B(_057_),
    .Y(_080_)
  );
  NAND _148_ (
    .A(_048_),
    .B(_056_),
    .Y(_081_)
  );
  NAND _149_ (
    .A(IDLE_in),
    .B(_080_),
    .Y(_082_)
  );
  NAND _150_ (
    .A(temporal[7]),
    .B(_081_),
    .Y(_083_)
  );
  NAND _151_ (
    .A(_082_),
    .B(_083_),
    .Y(_003_)
  );
  NOR _152_ (
    .A(_049_),
    .B(_065_),
    .Y(_084_)
  );
  NAND _153_ (
    .A(_048_),
    .B(_064_),
    .Y(_085_)
  );
  NAND _154_ (
    .A(IDLE_in),
    .B(_084_),
    .Y(_086_)
  );
  NAND _155_ (
    .A(temporal[6]),
    .B(_085_),
    .Y(_015_)
  );
  NAND _156_ (
    .A(_086_),
    .B(_015_),
    .Y(_002_)
  );
  NOR _157_ (
    .A(_049_),
    .B(_075_),
    .Y(_016_)
  );
  NAND _158_ (
    .A(_048_),
    .B(_074_),
    .Y(_017_)
  );
  NAND _159_ (
    .A(IDLE_in),
    .B(_016_),
    .Y(_018_)
  );
  NAND _160_ (
    .A(temporal[5]),
    .B(_017_),
    .Y(_019_)
  );
  NAND _161_ (
    .A(_018_),
    .B(_019_),
    .Y(_001_)
  );
  NAND _162_ (
    .A(temporal[6]),
    .B(temporal[5]),
    .Y(_020_)
  );
  NOR _163_ (
    .A(temporal[7]),
    .B(_020_),
    .Y(_021_)
  );
  NAND _164_ (
    .A(contador_COM[2]),
    .B(temporal[4]),
    .Y(_022_)
  );
  NAND _165_ (
    .A(temporal[3]),
    .B(temporal[2]),
    .Y(_023_)
  );
  NOT _166_ (
    .A(_023_),
    .Y(_024_)
  );
  NOR _167_ (
    .A(temporal[0]),
    .B(temporal[1]),
    .Y(_025_)
  );
  NAND _168_ (
    .A(_024_),
    .B(_025_),
    .Y(_026_)
  );
  NOR _169_ (
    .A(_022_),
    .B(_026_),
    .Y(_027_)
  );
  NAND _170_ (
    .A(_021_),
    .B(_027_),
    .Y(_028_)
  );
  NOT _171_ (
    .A(_028_),
    .Y(_000_)
  );
  NOR _172_ (
    .A(contador_COM[2]),
    .B(_043_),
    .Y(_029_)
  );
  NOR _173_ (
    .A(_030_),
    .B(_029_),
    .Y(_014_)
  );
  (* src = "SerialParalelo_PhyTX_synth.v:57.2-65.6" *)
  DFF _174_ (
    .C(clk_2),
    .D(_000_),
    .Q(IDLE_out_synth)
  );
  (* src = "SerialParalelo_PhyTX_synth.v:21.2-55.6" *)
  DFF _175_ (
    .C(clk_1),
    .D(_001_),
    .Q(temporal[5])
  );
  (* src = "SerialParalelo_PhyTX_synth.v:21.2-55.6" *)
  DFF _176_ (
    .C(clk_1),
    .D(_002_),
    .Q(temporal[6])
  );
  (* src = "SerialParalelo_PhyTX_synth.v:21.2-55.6" *)
  DFF _177_ (
    .C(clk_1),
    .D(_003_),
    .Q(temporal[7])
  );
  (* src = "SerialParalelo_PhyTX_synth.v:21.2-55.6" *)
  DFF _178_ (
    .C(clk_1),
    .D(_004_),
    .Q(temporal[1])
  );
  (* src = "SerialParalelo_PhyTX_synth.v:21.2-55.6" *)
  DFF _179_ (
    .C(clk_1),
    .D(_005_),
    .Q(temporal[0])
  );
  (* src = "SerialParalelo_PhyTX_synth.v:21.2-55.6" *)
  DFF _180_ (
    .C(clk_1),
    .D(_006_),
    .Q(temporal[2])
  );
  (* src = "SerialParalelo_PhyTX_synth.v:21.2-55.6" *)
  DFF _181_ (
    .C(clk_1),
    .D(_007_),
    .Q(temporal[3])
  );
  (* src = "SerialParalelo_PhyTX_synth.v:21.2-55.6" *)
  DFF _182_ (
    .C(clk_1),
    .D(_008_),
    .Q(temporal[4])
  );
  (* src = "SerialParalelo_PhyTX_synth.v:21.2-55.6" *)
  DFF _183_ (
    .C(clk_1),
    .D(_009_),
    .Q(selector[0])
  );
  (* src = "SerialParalelo_PhyTX_synth.v:21.2-55.6" *)
  DFF _184_ (
    .C(clk_1),
    .D(_010_),
    .Q(selector[1])
  );
  (* src = "SerialParalelo_PhyTX_synth.v:21.2-55.6" *)
  DFF _185_ (
    .C(clk_1),
    .D(_011_),
    .Q(selector[2])
  );
  (* src = "SerialParalelo_PhyTX_synth.v:21.2-55.6" *)
  DFF _186_ (
    .C(clk_1),
    .D(_012_),
    .Q(contador_COM[0])
  );
  (* src = "SerialParalelo_PhyTX_synth.v:21.2-55.6" *)
  DFF _187_ (
    .C(clk_1),
    .D(_013_),
    .Q(contador_COM[1])
  );
  (* src = "SerialParalelo_PhyTX_synth.v:21.2-55.6" *)
  DFF _188_ (
    .C(clk_1),
    .D(_014_),
    .Q(contador_COM[2])
  );
  assign active = 1'h0;
endmodule
