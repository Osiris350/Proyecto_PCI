/* Generated by Yosys 0.9+4052 (git sha1 44520808, clang 10.0.0-4ubuntu1 -fPIC -Os) */

(* src = "DeMux2x1_synth_synth.v:1.1-76.10" *)
module DeMux2x1_synth_synth(dataOut0_synth, dataOut1_synth, validOut0_synth, validOut1_synth, dataIn, validIn, clk, reset);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  (* src = "DeMux2x1_synth_synth.v:8.11-8.14" *)
  input clk;
  (* src = "DeMux2x1_synth_synth.v:6.16-6.22" *)
  input [7:0] dataIn;
  (* src = "DeMux2x1_synth_synth.v:2.21-2.34" *)
  output [7:0] dataOut0_synth;
  (* src = "DeMux2x1_synth_synth.v:3.21-3.34" *)
  output [7:0] dataOut1_synth;
  (* src = "DeMux2x1_synth_synth.v:9.11-9.16" *)
  input reset;
  (* src = "DeMux2x1_synth_synth.v:15.9-15.22" *)
  wire selector_synth;
  (* src = "DeMux2x1_synth_synth.v:7.11-7.18" *)
  input validIn;
  (* src = "DeMux2x1_synth_synth.v:4.16-4.30" *)
  output validOut0_synth;
  (* src = "DeMux2x1_synth_synth.v:5.16-5.30" *)
  output validOut1_synth;
  NOT _087_ (
    .A(dataIn[7]),
    .Y(_045_)
  );
  NOT _088_ (
    .A(reset),
    .Y(_046_)
  );
  NOT _089_ (
    .A(dataIn[6]),
    .Y(_047_)
  );
  NOT _090_ (
    .A(dataIn[5]),
    .Y(_048_)
  );
  NOT _091_ (
    .A(dataIn[4]),
    .Y(_049_)
  );
  NOT _092_ (
    .A(dataIn[3]),
    .Y(_050_)
  );
  NOT _093_ (
    .A(dataIn[2]),
    .Y(_051_)
  );
  NOT _094_ (
    .A(dataIn[1]),
    .Y(_052_)
  );
  NOT _095_ (
    .A(dataIn[0]),
    .Y(_053_)
  );
  NOT _096_ (
    .A(selector_synth),
    .Y(_054_)
  );
  NOT _097_ (
    .A(validIn),
    .Y(_055_)
  );
  NOR _098_ (
    .A(selector_synth),
    .B(_055_),
    .Y(_056_)
  );
  NOR _099_ (
    .A(dataOut0_synth[6]),
    .B(_056_),
    .Y(_057_)
  );
  NAND _100_ (
    .A(_047_),
    .B(_056_),
    .Y(_058_)
  );
  NAND _101_ (
    .A(reset),
    .B(_058_),
    .Y(_059_)
  );
  NOR _102_ (
    .A(_057_),
    .B(_059_),
    .Y(_017_)
  );
  NOR _103_ (
    .A(dataOut0_synth[5]),
    .B(_056_),
    .Y(_060_)
  );
  NAND _104_ (
    .A(_048_),
    .B(_056_),
    .Y(_061_)
  );
  NAND _105_ (
    .A(reset),
    .B(_061_),
    .Y(_062_)
  );
  NOR _106_ (
    .A(_060_),
    .B(_062_),
    .Y(_016_)
  );
  NOR _107_ (
    .A(dataOut0_synth[4]),
    .B(_056_),
    .Y(_063_)
  );
  NAND _108_ (
    .A(_049_),
    .B(_056_),
    .Y(_064_)
  );
  NAND _109_ (
    .A(reset),
    .B(_064_),
    .Y(_065_)
  );
  NOR _110_ (
    .A(_063_),
    .B(_065_),
    .Y(_015_)
  );
  NOR _111_ (
    .A(dataOut0_synth[3]),
    .B(_056_),
    .Y(_066_)
  );
  NAND _112_ (
    .A(_050_),
    .B(_056_),
    .Y(_067_)
  );
  NAND _113_ (
    .A(reset),
    .B(_067_),
    .Y(_068_)
  );
  NOR _114_ (
    .A(_066_),
    .B(_068_),
    .Y(_014_)
  );
  NOR _115_ (
    .A(dataOut0_synth[2]),
    .B(_056_),
    .Y(_069_)
  );
  NAND _116_ (
    .A(_051_),
    .B(_056_),
    .Y(_070_)
  );
  NAND _117_ (
    .A(reset),
    .B(_070_),
    .Y(_071_)
  );
  NOR _118_ (
    .A(_069_),
    .B(_071_),
    .Y(_013_)
  );
  NOR _119_ (
    .A(dataOut0_synth[1]),
    .B(_056_),
    .Y(_072_)
  );
  NAND _120_ (
    .A(_052_),
    .B(_056_),
    .Y(_073_)
  );
  NAND _121_ (
    .A(reset),
    .B(_073_),
    .Y(_074_)
  );
  NOR _122_ (
    .A(_072_),
    .B(_074_),
    .Y(_012_)
  );
  NOR _123_ (
    .A(dataOut0_synth[0]),
    .B(_056_),
    .Y(_075_)
  );
  NAND _124_ (
    .A(_053_),
    .B(_056_),
    .Y(_076_)
  );
  NAND _125_ (
    .A(reset),
    .B(_076_),
    .Y(_077_)
  );
  NOR _126_ (
    .A(_075_),
    .B(_077_),
    .Y(_011_)
  );
  NOR _127_ (
    .A(_054_),
    .B(_055_),
    .Y(_078_)
  );
  NAND _128_ (
    .A(selector_synth),
    .B(validIn),
    .Y(_079_)
  );
  NOR _129_ (
    .A(dataOut1_synth[7]),
    .B(_078_),
    .Y(_080_)
  );
  NAND _130_ (
    .A(_045_),
    .B(_078_),
    .Y(_081_)
  );
  NAND _131_ (
    .A(reset),
    .B(_081_),
    .Y(_082_)
  );
  NOR _132_ (
    .A(_080_),
    .B(_082_),
    .Y(_010_)
  );
  NOR _133_ (
    .A(dataOut1_synth[6]),
    .B(_078_),
    .Y(_083_)
  );
  NAND _134_ (
    .A(_047_),
    .B(_078_),
    .Y(_084_)
  );
  NAND _135_ (
    .A(reset),
    .B(_084_),
    .Y(_085_)
  );
  NOR _136_ (
    .A(_083_),
    .B(_085_),
    .Y(_009_)
  );
  NOR _137_ (
    .A(dataOut1_synth[5]),
    .B(_078_),
    .Y(_086_)
  );
  NAND _138_ (
    .A(_048_),
    .B(_078_),
    .Y(_019_)
  );
  NAND _139_ (
    .A(reset),
    .B(_019_),
    .Y(_020_)
  );
  NOR _140_ (
    .A(_086_),
    .B(_020_),
    .Y(_008_)
  );
  NOR _141_ (
    .A(dataOut1_synth[4]),
    .B(_078_),
    .Y(_021_)
  );
  NAND _142_ (
    .A(_049_),
    .B(_078_),
    .Y(_022_)
  );
  NAND _143_ (
    .A(reset),
    .B(_022_),
    .Y(_023_)
  );
  NOR _144_ (
    .A(_021_),
    .B(_023_),
    .Y(_007_)
  );
  NOR _145_ (
    .A(dataOut1_synth[3]),
    .B(_078_),
    .Y(_024_)
  );
  NAND _146_ (
    .A(_050_),
    .B(_078_),
    .Y(_025_)
  );
  NAND _147_ (
    .A(reset),
    .B(_025_),
    .Y(_026_)
  );
  NOR _148_ (
    .A(_024_),
    .B(_026_),
    .Y(_006_)
  );
  NOR _149_ (
    .A(dataOut1_synth[2]),
    .B(_078_),
    .Y(_027_)
  );
  NAND _150_ (
    .A(_051_),
    .B(_078_),
    .Y(_028_)
  );
  NAND _151_ (
    .A(reset),
    .B(_028_),
    .Y(_029_)
  );
  NOR _152_ (
    .A(_027_),
    .B(_029_),
    .Y(_005_)
  );
  NOR _153_ (
    .A(dataOut1_synth[1]),
    .B(_078_),
    .Y(_030_)
  );
  NAND _154_ (
    .A(_052_),
    .B(_078_),
    .Y(_031_)
  );
  NAND _155_ (
    .A(reset),
    .B(_031_),
    .Y(_032_)
  );
  NOR _156_ (
    .A(_030_),
    .B(_032_),
    .Y(_004_)
  );
  NOR _157_ (
    .A(dataOut1_synth[0]),
    .B(_078_),
    .Y(_033_)
  );
  NAND _158_ (
    .A(_053_),
    .B(_078_),
    .Y(_034_)
  );
  NAND _159_ (
    .A(reset),
    .B(_034_),
    .Y(_035_)
  );
  NOR _160_ (
    .A(_033_),
    .B(_035_),
    .Y(_003_)
  );
  NAND _161_ (
    .A(_054_),
    .B(validOut1_synth),
    .Y(_036_)
  );
  NAND _162_ (
    .A(_079_),
    .B(_036_),
    .Y(_037_)
  );
  NAND _163_ (
    .A(reset),
    .B(_037_),
    .Y(_038_)
  );
  NOT _164_ (
    .A(_038_),
    .Y(_002_)
  );
  NAND _165_ (
    .A(selector_synth),
    .B(validOut0_synth),
    .Y(_039_)
  );
  NOT _166_ (
    .A(_039_),
    .Y(_040_)
  );
  NOR _167_ (
    .A(_056_),
    .B(_040_),
    .Y(_041_)
  );
  NAND _168_ (
    .A(reset),
    .B(selector_synth),
    .Y(_000_)
  );
  NOR _169_ (
    .A(_046_),
    .B(_041_),
    .Y(_001_)
  );
  NAND _170_ (
    .A(_045_),
    .B(_056_),
    .Y(_042_)
  );
  NAND _171_ (
    .A(reset),
    .B(_042_),
    .Y(_043_)
  );
  NOR _172_ (
    .A(dataOut0_synth[7]),
    .B(_056_),
    .Y(_044_)
  );
  NOR _173_ (
    .A(_043_),
    .B(_044_),
    .Y(_018_)
  );
  (* src = "DeMux2x1_synth_synth.v:17.5-24.8" *)
  DFF _174_ (
    .C(clk),
    .D(_000_),
    .Q(selector_synth)
  );
  (* src = "DeMux2x1_synth_synth.v:42.5-58.12" *)
  DFF _175_ (
    .C(clk),
    .D(_001_),
    .Q(validOut0_synth)
  );
  (* src = "DeMux2x1_synth_synth.v:59.5-75.12" *)
  DFF _176_ (
    .C(clk),
    .D(_002_),
    .Q(validOut1_synth)
  );
  (* src = "DeMux2x1_synth_synth.v:59.5-75.12" *)
  DFF _177_ (
    .C(clk),
    .D(_003_),
    .Q(dataOut1_synth[0])
  );
  (* src = "DeMux2x1_synth_synth.v:59.5-75.12" *)
  DFF _178_ (
    .C(clk),
    .D(_004_),
    .Q(dataOut1_synth[1])
  );
  (* src = "DeMux2x1_synth_synth.v:59.5-75.12" *)
  DFF _179_ (
    .C(clk),
    .D(_005_),
    .Q(dataOut1_synth[2])
  );
  (* src = "DeMux2x1_synth_synth.v:59.5-75.12" *)
  DFF _180_ (
    .C(clk),
    .D(_006_),
    .Q(dataOut1_synth[3])
  );
  (* src = "DeMux2x1_synth_synth.v:59.5-75.12" *)
  DFF _181_ (
    .C(clk),
    .D(_007_),
    .Q(dataOut1_synth[4])
  );
  (* src = "DeMux2x1_synth_synth.v:59.5-75.12" *)
  DFF _182_ (
    .C(clk),
    .D(_008_),
    .Q(dataOut1_synth[5])
  );
  (* src = "DeMux2x1_synth_synth.v:59.5-75.12" *)
  DFF _183_ (
    .C(clk),
    .D(_009_),
    .Q(dataOut1_synth[6])
  );
  (* src = "DeMux2x1_synth_synth.v:59.5-75.12" *)
  DFF _184_ (
    .C(clk),
    .D(_010_),
    .Q(dataOut1_synth[7])
  );
  (* src = "DeMux2x1_synth_synth.v:42.5-58.12" *)
  DFF _185_ (
    .C(clk),
    .D(_011_),
    .Q(dataOut0_synth[0])
  );
  (* src = "DeMux2x1_synth_synth.v:42.5-58.12" *)
  DFF _186_ (
    .C(clk),
    .D(_012_),
    .Q(dataOut0_synth[1])
  );
  (* src = "DeMux2x1_synth_synth.v:42.5-58.12" *)
  DFF _187_ (
    .C(clk),
    .D(_013_),
    .Q(dataOut0_synth[2])
  );
  (* src = "DeMux2x1_synth_synth.v:42.5-58.12" *)
  DFF _188_ (
    .C(clk),
    .D(_014_),
    .Q(dataOut0_synth[3])
  );
  (* src = "DeMux2x1_synth_synth.v:42.5-58.12" *)
  DFF _189_ (
    .C(clk),
    .D(_015_),
    .Q(dataOut0_synth[4])
  );
  (* src = "DeMux2x1_synth_synth.v:42.5-58.12" *)
  DFF _190_ (
    .C(clk),
    .D(_016_),
    .Q(dataOut0_synth[5])
  );
  (* src = "DeMux2x1_synth_synth.v:42.5-58.12" *)
  DFF _191_ (
    .C(clk),
    .D(_017_),
    .Q(dataOut0_synth[6])
  );
  (* src = "DeMux2x1_synth_synth.v:42.5-58.12" *)
  DFF _192_ (
    .C(clk),
    .D(_018_),
    .Q(dataOut0_synth[7])
  );
endmodule

(* src = "DeMuxL1_synth_synth.v:2.1-43.10" *)
module DeMuxL1_synth_synth(dataOut0_synth, dataOut1_synth, dataOut2_synth, dataOut3_synth, validOut0_synth, validOut1_synth, validOut2_synth, validOut3_synth, dataIn0, dataIn1, validIn0, validIn1, clk, reset);
  (* src = "DeMuxL1_synth_synth.v:15.11-15.14" *)
  input clk;
  (* src = "DeMuxL1_synth_synth.v:11.16-11.23" *)
  input [7:0] dataIn0;
  (* src = "DeMuxL1_synth_synth.v:12.16-12.23" *)
  input [7:0] dataIn1;
  (* src = "DeMuxL1_synth_synth.v:3.17-3.30" *)
  output [7:0] dataOut0_synth;
  (* src = "DeMuxL1_synth_synth.v:4.17-4.30" *)
  output [7:0] dataOut1_synth;
  (* src = "DeMuxL1_synth_synth.v:5.17-5.30" *)
  output [7:0] dataOut2_synth;
  (* src = "DeMuxL1_synth_synth.v:6.17-6.30" *)
  output [7:0] dataOut3_synth;
  (* src = "DeMuxL1_synth_synth.v:16.11-16.16" *)
  input reset;
  (* src = "DeMuxL1_synth_synth.v:13.11-13.19" *)
  input validIn0;
  (* src = "DeMuxL1_synth_synth.v:14.11-14.19" *)
  input validIn1;
  (* src = "DeMuxL1_synth_synth.v:7.12-7.26" *)
  output validOut0_synth;
  (* src = "DeMuxL1_synth_synth.v:8.12-8.26" *)
  output validOut1_synth;
  (* src = "DeMuxL1_synth_synth.v:9.12-9.26" *)
  output validOut2_synth;
  (* src = "DeMuxL1_synth_synth.v:10.12-10.26" *)
  output validOut3_synth;
  (* module_not_derived = 32'd1 *)
  (* src = "DeMuxL1_synth_synth.v:18.14-29.6" *)
  DeMux2x1_synth_synth Demux1 (
    .clk(clk),
    .dataIn(dataIn0),
    .dataOut0_synth(dataOut0_synth),
    .dataOut1_synth(dataOut1_synth),
    .reset(reset),
    .validIn(validIn0),
    .validOut0_synth(validOut0_synth),
    .validOut1_synth(validOut1_synth)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "DeMuxL1_synth_synth.v:31.14-42.6" *)
  DeMux2x1_synth_synth Demux2 (
    .clk(clk),
    .dataIn(dataIn1),
    .dataOut0_synth(dataOut2_synth),
    .dataOut1_synth(dataOut3_synth),
    .reset(reset),
    .validIn(validIn1),
    .validOut0_synth(validOut2_synth),
    .validOut1_synth(validOut3_synth)
  );
endmodule

(* src = "DeMuxL2_synth_synth.v:2.1-26.10" *)
module DeMuxL2_synth_synth(dataOut0_synth, dataOut1_synth, validOut0_synth, validOut1_synth, dataIn, validIn, clk, reset);
  (* src = "DeMuxL2_synth_synth.v:10.11-10.14" *)
  input clk;
  (* src = "DeMuxL2_synth_synth.v:7.16-7.22" *)
  input [7:0] dataIn;
  (* src = "DeMuxL2_synth_synth.v:3.17-3.30" *)
  output [7:0] dataOut0_synth;
  (* src = "DeMuxL2_synth_synth.v:4.17-4.30" *)
  output [7:0] dataOut1_synth;
  (* src = "DeMuxL2_synth_synth.v:11.11-11.16" *)
  input reset;
  (* src = "DeMuxL2_synth_synth.v:8.11-8.18" *)
  input validIn;
  (* src = "DeMuxL2_synth_synth.v:5.12-5.26" *)
  output validOut0_synth;
  (* src = "DeMuxL2_synth_synth.v:6.12-6.26" *)
  output validOut1_synth;
  (* module_not_derived = 32'd1 *)
  (* src = "DeMuxL2_synth_synth.v:13.14-25.6" *)
  DeMux2x1_synth_synth Demux (
    .clk(clk),
    .dataIn(dataIn),
    .dataOut0_synth(dataOut0_synth),
    .dataOut1_synth(dataOut1_synth),
    .reset(reset),
    .validIn(validIn),
    .validOut0_synth(validOut0_synth),
    .validOut1_synth(validOut1_synth)
  );
endmodule

(* src = "ParaleloSerial_PhyRX_synth.v:1.1-53.10" *)
module ParaleloSerial_PhyRX_synth(clk, active_synth, reset, outputS_synth);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  (* src = "ParaleloSerial_PhyRX_synth.v:3.8-3.19" *)
  input active_synth;
  (* src = "ParaleloSerial_PhyRX_synth.v:2.8-2.11" *)
  input clk;
  (* src = "ParaleloSerial_PhyRX_synth.v:5.13-5.25" *)
  output outputS_synth;
  (* src = "ParaleloSerial_PhyRX_synth.v:4.8-4.13" *)
  input reset;
  (* src = "ParaleloSerial_PhyRX_synth.v:8.14-8.22" *)
  wire [2:0] selector;
  NOT _21_ (
    .A(reset),
    .Y(_03_)
  );
  NOT _22_ (
    .A(selector[0]),
    .Y(_04_)
  );
  NOT _23_ (
    .A(selector[1]),
    .Y(_05_)
  );
  NOT _24_ (
    .A(active_synth),
    .Y(_06_)
  );
  NOR _25_ (
    .A(_04_),
    .B(_05_),
    .Y(_07_)
  );
  NOR _26_ (
    .A(selector[0]),
    .B(selector[1]),
    .Y(_08_)
  );
  NOT _27_ (
    .A(_08_),
    .Y(_09_)
  );
  NAND _28_ (
    .A(reset),
    .B(_09_),
    .Y(_10_)
  );
  NOR _29_ (
    .A(_07_),
    .B(_10_),
    .Y(_01_)
  );
  NOR _30_ (
    .A(_03_),
    .B(selector[0]),
    .Y(_00_)
  );
  NAND _31_ (
    .A(selector[2]),
    .B(selector[1]),
    .Y(_11_)
  );
  NAND _32_ (
    .A(reset),
    .B(_11_),
    .Y(_12_)
  );
  NOT _33_ (
    .A(_12_),
    .Y(_13_)
  );
  NOR _34_ (
    .A(_04_),
    .B(_06_),
    .Y(_14_)
  );
  NOR _35_ (
    .A(selector[2]),
    .B(selector[1]),
    .Y(_15_)
  );
  NAND _36_ (
    .A(_04_),
    .B(_06_),
    .Y(_16_)
  );
  NAND _37_ (
    .A(_15_),
    .B(_16_),
    .Y(_17_)
  );
  NOR _38_ (
    .A(_14_),
    .B(_17_),
    .Y(_18_)
  );
  NOR _39_ (
    .A(_12_),
    .B(_18_),
    .Y(outputS_synth)
  );
  NOR _40_ (
    .A(selector[2]),
    .B(_07_),
    .Y(_19_)
  );
  NOR _41_ (
    .A(_00_),
    .B(_13_),
    .Y(_20_)
  );
  NOR _42_ (
    .A(_19_),
    .B(_20_),
    .Y(_02_)
  );
  (* src = "ParaleloSerial_PhyRX_synth.v:10.1-18.4" *)
  DFF _43_ (
    .C(clk),
    .D(_00_),
    .Q(selector[0])
  );
  (* src = "ParaleloSerial_PhyRX_synth.v:10.1-18.4" *)
  DFF _44_ (
    .C(clk),
    .D(_01_),
    .Q(selector[1])
  );
  (* src = "ParaleloSerial_PhyRX_synth.v:10.1-18.4" *)
  DFF _45_ (
    .C(clk),
    .D(_02_),
    .Q(selector[2])
  );
endmodule

(* top =  1  *)
(* src = "Phy_Rx_synth.v:6.1-81.10" *)
module Phy_Rx_synth(SerialIn, reset, clk_f, clk_2f, clk_4f, clk_32f, SerialOut_synth, dataOut0_Rx_synth, dataOut1_Rx_synth, dataOut2_Rx_synth, dataOut3_Rx_synth, validOut0_Rx_synth, validOut1_Rx_synth, validOut2_Rx_synth, validOut3_Rx_synth);
  (* src = "Phy_Rx_synth.v:7.11-7.19" *)
  input SerialIn;
  (* src = "Phy_Rx_synth.v:14.13-14.27" *)
  output SerialOut_synth;
  (* src = "Phy_Rx_synth.v:27.10-27.21" *)
  wire active_synth;
  (* src = "Phy_Rx_synth.v:10.11-10.17" *)
  input clk_2f;
  (* src = "Phy_Rx_synth.v:12.11-12.18" *)
  input clk_32f;
  (* src = "Phy_Rx_synth.v:11.11-11.17" *)
  input clk_4f;
  (* src = "Phy_Rx_synth.v:9.11-9.16" *)
  input clk_f;
  (* src = "Phy_Rx_synth.v:15.19-15.35" *)
  output [7:0] dataOut0_Rx_synth;
  (* src = "Phy_Rx_synth.v:16.19-16.35" *)
  output [7:0] dataOut1_Rx_synth;
  (* src = "Phy_Rx_synth.v:17.19-17.35" *)
  output [7:0] dataOut2_Rx_synth;
  (* src = "Phy_Rx_synth.v:18.19-18.35" *)
  output [7:0] dataOut3_Rx_synth;
  (* src = "Phy_Rx_synth.v:30.16-30.34" *)
  wire [7:0] dataOutDeL2_0_synth;
  (* src = "Phy_Rx_synth.v:30.36-30.54" *)
  wire [7:0] dataOutDeL2_1_synth;
  (* src = "Phy_Rx_synth.v:25.16-25.32" *)
  wire [7:0] dataOut_PRx_synth;
  (* src = "Phy_Rx_synth.v:8.11-8.16" *)
  input reset;
  (* src = "Phy_Rx_synth.v:19.13-19.30" *)
  output validOut0_Rx_synth;
  (* src = "Phy_Rx_synth.v:20.13-20.30" *)
  output validOut1_Rx_synth;
  (* src = "Phy_Rx_synth.v:21.13-21.30" *)
  output validOut2_Rx_synth;
  (* src = "Phy_Rx_synth.v:22.13-22.30" *)
  output validOut3_Rx_synth;
  (* src = "Phy_Rx_synth.v:31.7-31.27" *)
  wire validOut_DeL2_0_synth;
  (* src = "Phy_Rx_synth.v:31.29-31.49" *)
  wire validOut_DeL2_1_synth;
  (* src = "Phy_Rx_synth.v:26.10-26.27" *)
  wire validOut_PRx_synth;
  (* module_not_derived = 32'd1 *)
  (* src = "Phy_Rx_synth.v:64.13-80.25" *)
  DeMuxL1_synth_synth DeL1 (
    .clk(clk_2f),
    .dataIn0(dataOutDeL2_0_synth),
    .dataIn1(dataOutDeL2_1_synth),
    .dataOut0_synth(dataOut0_Rx_synth),
    .dataOut1_synth(dataOut1_Rx_synth),
    .dataOut2_synth(dataOut2_Rx_synth),
    .dataOut3_synth(dataOut3_Rx_synth),
    .reset(reset),
    .validIn0(validOut_DeL2_0_synth),
    .validIn1(validOut_DeL2_1_synth),
    .validOut0_synth(validOut0_Rx_synth),
    .validOut1_synth(validOut1_Rx_synth),
    .validOut2_synth(validOut2_Rx_synth),
    .validOut3_synth(validOut3_Rx_synth)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "Phy_Rx_synth.v:52.13-62.28" *)
  DeMuxL2_synth_synth DeL2 (
    .clk(clk_4f),
    .dataIn(dataOut_PRx_synth),
    .dataOut0_synth(dataOutDeL2_0_synth),
    .dataOut1_synth(dataOutDeL2_1_synth),
    .reset(reset),
    .validIn(validOut_PRx_synth),
    .validOut0_synth(validOut_DeL2_0_synth),
    .validOut1_synth(validOut_DeL2_1_synth)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "Phy_Rx_synth.v:44.23-50.30" *)
  ParaleloSerial_PhyRX_synth ParaleloSerial_PhyRX_synth_C (
    .active_synth(active_synth),
    .clk(clk_32f),
    .outputS_synth(SerialOut_synth),
    .reset(reset)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "Phy_Rx_synth.v:33.26-42.33" *)
  SerialParalelo_PhyRX_synth SerialParalelo_PhyRX_synth_C (
    .active_synth(active_synth),
    .clk(clk_32f),
    .clk_4f(clk_4f),
    .paralelo_synth(dataOut_PRx_synth),
    .reset(reset),
    .serial(SerialIn),
    .validOut_synth(validOut_PRx_synth)
  );
endmodule

(* src = "SerialParalelo_PhyRX_synth.v:1.1-83.10" *)
module SerialParalelo_PhyRX_synth(clk, clk_4f, serial, reset, paralelo_synth, validOut_synth, active_synth);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  (* init = 1'h0 *)
  (* src = "SerialParalelo_PhyRX_synth.v:11.5-11.15" *)
  wire BC_counter;
  (* src = "SerialParalelo_PhyRX_synth.v:8.16-8.27" *)
  output active_synth;
  (* init = 1'h0 *)
  (* src = "SerialParalelo_PhyRX_synth.v:17.5-17.9" *)
  wire aux1;
  (* init = 1'h0 *)
  (* src = "SerialParalelo_PhyRX_synth.v:18.5-18.9" *)
  wire aux2;
  (* init = 1'h0 *)
  (* src = "SerialParalelo_PhyRX_synth.v:19.5-19.9" *)
  wire aux3;
  (* src = "SerialParalelo_PhyRX_synth.v:2.11-2.14" *)
  input clk;
  (* src = "SerialParalelo_PhyRX_synth.v:3.11-3.17" *)
  input clk_4f;
  (* src = "SerialParalelo_PhyRX_synth.v:16.10-16.19" *)
  wire [7:0] data2send;
  (* init = 4'h0 *)
  (* src = "SerialParalelo_PhyRX_synth.v:12.10-12.11" *)
  wire [3:0] i;
  (* src = "SerialParalelo_PhyRX_synth.v:6.22-6.35" *)
  output [7:0] paralelo_synth;
  (* src = "SerialParalelo_PhyRX_synth.v:5.11-5.16" *)
  input reset;
  (* src = "SerialParalelo_PhyRX_synth.v:4.11-4.17" *)
  input serial;
  (* init = 8'h00 *)
  (* src = "SerialParalelo_PhyRX_synth.v:14.10-14.15" *)
  wire [7:0] temp2;
  (* init = 8'h00 *)
  (* src = "SerialParalelo_PhyRX_synth.v:15.10-15.15" *)
  wire [7:0] temp3;
  (* src = "SerialParalelo_PhyRX_synth.v:7.16-7.29" *)
  output validOut_synth;
  NOT _148_ (
    .A(reset),
    .Y(_119_)
  );
  NOT _149_ (
    .A(temp2[6]),
    .Y(_120_)
  );
  NOT _150_ (
    .A(temp2[5]),
    .Y(_121_)
  );
  NOT _151_ (
    .A(i[2]),
    .Y(_122_)
  );
  NOT _152_ (
    .A(i[3]),
    .Y(_123_)
  );
  NOT _153_ (
    .A(i[1]),
    .Y(_124_)
  );
  NOT _154_ (
    .A(i[0]),
    .Y(_125_)
  );
  NOT _155_ (
    .A(temp3[1]),
    .Y(_126_)
  );
  NOT _156_ (
    .A(temp3[2]),
    .Y(_127_)
  );
  NOT _157_ (
    .A(temp3[3]),
    .Y(_128_)
  );
  NOT _158_ (
    .A(temp3[7]),
    .Y(_129_)
  );
  NOT _159_ (
    .A(serial),
    .Y(_130_)
  );
  NOR _160_ (
    .A(i[1]),
    .B(i[0]),
    .Y(_131_)
  );
  NAND _161_ (
    .A(_124_),
    .B(_125_),
    .Y(_132_)
  );
  NOR _162_ (
    .A(i[2]),
    .B(i[3]),
    .Y(_133_)
  );
  NAND _163_ (
    .A(_122_),
    .B(_123_),
    .Y(_134_)
  );
  NOR _164_ (
    .A(i[2]),
    .B(_132_),
    .Y(_135_)
  );
  NAND _165_ (
    .A(_122_),
    .B(_131_),
    .Y(_136_)
  );
  NOR _166_ (
    .A(_132_),
    .B(_134_),
    .Y(_137_)
  );
  NOR _167_ (
    .A(temp2[6]),
    .B(_137_),
    .Y(_138_)
  );
  NOR _168_ (
    .A(_119_),
    .B(_137_),
    .Y(_139_)
  );
  NOR _169_ (
    .A(_124_),
    .B(i[0]),
    .Y(_140_)
  );
  NOR _170_ (
    .A(_122_),
    .B(i[3]),
    .Y(_141_)
  );
  NAND _171_ (
    .A(i[2]),
    .B(_123_),
    .Y(_142_)
  );
  NAND _172_ (
    .A(_140_),
    .B(_141_),
    .Y(_143_)
  );
  NAND _173_ (
    .A(reset),
    .B(temp3[6]),
    .Y(_144_)
  );
  NOR _174_ (
    .A(_119_),
    .B(_130_),
    .Y(_145_)
  );
  NAND _175_ (
    .A(_143_),
    .B(_144_),
    .Y(_146_)
  );
  NOT _176_ (
    .A(_146_),
    .Y(_147_)
  );
  NOR _177_ (
    .A(_143_),
    .B(_145_),
    .Y(_034_)
  );
  NOR _178_ (
    .A(_147_),
    .B(_034_),
    .Y(_015_)
  );
  NOR _179_ (
    .A(_139_),
    .B(_015_),
    .Y(_035_)
  );
  NOR _180_ (
    .A(_138_),
    .B(_035_),
    .Y(_032_)
  );
  NOR _181_ (
    .A(temp2[5]),
    .B(_137_),
    .Y(_036_)
  );
  NOR _182_ (
    .A(i[1]),
    .B(_125_),
    .Y(_037_)
  );
  NAND _183_ (
    .A(_141_),
    .B(_037_),
    .Y(_038_)
  );
  NAND _184_ (
    .A(reset),
    .B(temp3[5]),
    .Y(_039_)
  );
  NAND _185_ (
    .A(_038_),
    .B(_039_),
    .Y(_040_)
  );
  NOT _186_ (
    .A(_040_),
    .Y(_041_)
  );
  NOR _187_ (
    .A(_145_),
    .B(_038_),
    .Y(_042_)
  );
  NOR _188_ (
    .A(_041_),
    .B(_042_),
    .Y(_014_)
  );
  NOR _189_ (
    .A(_139_),
    .B(_014_),
    .Y(_043_)
  );
  NOR _190_ (
    .A(_036_),
    .B(_043_),
    .Y(_031_)
  );
  NOR _191_ (
    .A(temp2[4]),
    .B(_137_),
    .Y(_044_)
  );
  NOR _192_ (
    .A(_132_),
    .B(_142_),
    .Y(_045_)
  );
  NAND _193_ (
    .A(_130_),
    .B(_045_),
    .Y(_046_)
  );
  NOR _194_ (
    .A(temp3[4]),
    .B(_045_),
    .Y(_047_)
  );
  NAND _195_ (
    .A(reset),
    .B(_046_),
    .Y(_048_)
  );
  NOR _196_ (
    .A(_047_),
    .B(_048_),
    .Y(_013_)
  );
  NOR _197_ (
    .A(_139_),
    .B(_013_),
    .Y(_049_)
  );
  NOR _198_ (
    .A(_044_),
    .B(_049_),
    .Y(_030_)
  );
  NOR _199_ (
    .A(temp2[3]),
    .B(_137_),
    .Y(_050_)
  );
  NAND _200_ (
    .A(i[1]),
    .B(i[0]),
    .Y(_051_)
  );
  NOT _201_ (
    .A(_051_),
    .Y(_052_)
  );
  NOR _202_ (
    .A(_134_),
    .B(_051_),
    .Y(_053_)
  );
  NOR _203_ (
    .A(_128_),
    .B(_053_),
    .Y(_054_)
  );
  NAND _204_ (
    .A(serial),
    .B(_052_),
    .Y(_055_)
  );
  NOR _205_ (
    .A(_134_),
    .B(_055_),
    .Y(_056_)
  );
  NOR _206_ (
    .A(_054_),
    .B(_056_),
    .Y(_057_)
  );
  NOR _207_ (
    .A(_119_),
    .B(_057_),
    .Y(_012_)
  );
  NOR _208_ (
    .A(_139_),
    .B(_012_),
    .Y(_058_)
  );
  NOR _209_ (
    .A(_050_),
    .B(_058_),
    .Y(_029_)
  );
  NOR _210_ (
    .A(temp2[2]),
    .B(_137_),
    .Y(_059_)
  );
  NAND _211_ (
    .A(_133_),
    .B(_140_),
    .Y(_060_)
  );
  NOR _212_ (
    .A(serial),
    .B(_060_),
    .Y(_061_)
  );
  NAND _213_ (
    .A(_127_),
    .B(_060_),
    .Y(_062_)
  );
  NAND _214_ (
    .A(reset),
    .B(_062_),
    .Y(_063_)
  );
  NOR _215_ (
    .A(_061_),
    .B(_063_),
    .Y(_011_)
  );
  NOR _216_ (
    .A(_139_),
    .B(_011_),
    .Y(_064_)
  );
  NOR _217_ (
    .A(_059_),
    .B(_064_),
    .Y(_028_)
  );
  NOR _218_ (
    .A(temp2[1]),
    .B(_137_),
    .Y(_065_)
  );
  NAND _219_ (
    .A(_133_),
    .B(_037_),
    .Y(_066_)
  );
  NOR _220_ (
    .A(serial),
    .B(_066_),
    .Y(_067_)
  );
  NAND _221_ (
    .A(_126_),
    .B(_066_),
    .Y(_068_)
  );
  NAND _222_ (
    .A(reset),
    .B(_068_),
    .Y(_069_)
  );
  NOR _223_ (
    .A(_067_),
    .B(_069_),
    .Y(_010_)
  );
  NOR _224_ (
    .A(_139_),
    .B(_010_),
    .Y(_070_)
  );
  NOR _225_ (
    .A(_065_),
    .B(_070_),
    .Y(_027_)
  );
  NAND _226_ (
    .A(_137_),
    .B(_145_),
    .Y(_071_)
  );
  NAND _227_ (
    .A(temp2[0]),
    .B(_139_),
    .Y(_072_)
  );
  NAND _228_ (
    .A(_071_),
    .B(_072_),
    .Y(_026_)
  );
  NOR _229_ (
    .A(validOut_synth),
    .B(active_synth),
    .Y(_073_)
  );
  NAND _230_ (
    .A(temp2[7]),
    .B(temp2[4]),
    .Y(_074_)
  );
  NAND _231_ (
    .A(temp2[3]),
    .B(temp2[2]),
    .Y(_075_)
  );
  NOR _232_ (
    .A(temp2[1]),
    .B(_075_),
    .Y(_076_)
  );
  NOR _233_ (
    .A(temp2[0]),
    .B(_074_),
    .Y(_077_)
  );
  NAND _234_ (
    .A(_076_),
    .B(_077_),
    .Y(_078_)
  );
  NOT _235_ (
    .A(_078_),
    .Y(_079_)
  );
  NOR _236_ (
    .A(temp2[6]),
    .B(_121_),
    .Y(_080_)
  );
  NAND _237_ (
    .A(_120_),
    .B(temp2[5]),
    .Y(_081_)
  );
  NOR _238_ (
    .A(_078_),
    .B(_081_),
    .Y(_082_)
  );
  NAND _239_ (
    .A(_079_),
    .B(_080_),
    .Y(_083_)
  );
  NOR _240_ (
    .A(_119_),
    .B(_082_),
    .Y(_084_)
  );
  NAND _241_ (
    .A(reset),
    .B(_083_),
    .Y(_085_)
  );
  NOR _242_ (
    .A(_073_),
    .B(_085_),
    .Y(_025_)
  );
  NOR _243_ (
    .A(paralelo_synth[7]),
    .B(_083_),
    .Y(_086_)
  );
  NAND _244_ (
    .A(temp2[7]),
    .B(reset),
    .Y(_087_)
  );
  NOR _245_ (
    .A(_086_),
    .B(_087_),
    .Y(_024_)
  );
  NAND _246_ (
    .A(reset),
    .B(temp2[6]),
    .Y(_088_)
  );
  NOR _247_ (
    .A(_119_),
    .B(_083_),
    .Y(_008_)
  );
  NAND _248_ (
    .A(paralelo_synth[6]),
    .B(_008_),
    .Y(_089_)
  );
  NAND _249_ (
    .A(_088_),
    .B(_089_),
    .Y(_023_)
  );
  NOR _250_ (
    .A(temp2[6]),
    .B(paralelo_synth[5]),
    .Y(_090_)
  );
  NOT _251_ (
    .A(_090_),
    .Y(_091_)
  );
  NOR _252_ (
    .A(_078_),
    .B(_091_),
    .Y(_092_)
  );
  NAND _253_ (
    .A(reset),
    .B(temp2[5]),
    .Y(_093_)
  );
  NOR _254_ (
    .A(_092_),
    .B(_093_),
    .Y(_022_)
  );
  NOR _255_ (
    .A(paralelo_synth[4]),
    .B(_083_),
    .Y(_094_)
  );
  NAND _256_ (
    .A(reset),
    .B(temp2[4]),
    .Y(_095_)
  );
  NOR _257_ (
    .A(_094_),
    .B(_095_),
    .Y(_021_)
  );
  NAND _258_ (
    .A(temp2[3]),
    .B(_084_),
    .Y(_096_)
  );
  NAND _259_ (
    .A(paralelo_synth[3]),
    .B(_008_),
    .Y(_097_)
  );
  NAND _260_ (
    .A(_096_),
    .B(_097_),
    .Y(_020_)
  );
  NAND _261_ (
    .A(temp2[2]),
    .B(_084_),
    .Y(_098_)
  );
  NAND _262_ (
    .A(paralelo_synth[2]),
    .B(_008_),
    .Y(_099_)
  );
  NAND _263_ (
    .A(_098_),
    .B(_099_),
    .Y(_019_)
  );
  NAND _264_ (
    .A(reset),
    .B(temp2[1]),
    .Y(_100_)
  );
  NAND _265_ (
    .A(paralelo_synth[1]),
    .B(_008_),
    .Y(_101_)
  );
  NAND _266_ (
    .A(_100_),
    .B(_101_),
    .Y(_018_)
  );
  NAND _267_ (
    .A(reset),
    .B(temp2[0]),
    .Y(_102_)
  );
  NAND _268_ (
    .A(paralelo_synth[0]),
    .B(_008_),
    .Y(_103_)
  );
  NAND _269_ (
    .A(_102_),
    .B(_103_),
    .Y(_017_)
  );
  NOR _270_ (
    .A(_142_),
    .B(_051_),
    .Y(_104_)
  );
  NOR _271_ (
    .A(_129_),
    .B(_104_),
    .Y(_105_)
  );
  NOR _272_ (
    .A(_142_),
    .B(_055_),
    .Y(_106_)
  );
  NOR _273_ (
    .A(_105_),
    .B(_106_),
    .Y(_107_)
  );
  NOR _274_ (
    .A(_119_),
    .B(_107_),
    .Y(_016_)
  );
  NAND _275_ (
    .A(temp3[0]),
    .B(_139_),
    .Y(_108_)
  );
  NAND _276_ (
    .A(_071_),
    .B(_108_),
    .Y(_009_)
  );
  NAND _277_ (
    .A(reset),
    .B(BC_counter),
    .Y(_109_)
  );
  NOT _278_ (
    .A(_109_),
    .Y(_006_)
  );
  NAND _279_ (
    .A(aux3),
    .B(_008_),
    .Y(_110_)
  );
  NAND _280_ (
    .A(_109_),
    .B(_110_),
    .Y(_007_)
  );
  NAND _281_ (
    .A(aux2),
    .B(_008_),
    .Y(_111_)
  );
  NOT _282_ (
    .A(_111_),
    .Y(_005_)
  );
  NAND _283_ (
    .A(aux1),
    .B(_008_),
    .Y(_112_)
  );
  NOT _284_ (
    .A(_112_),
    .Y(_004_)
  );
  NOR _285_ (
    .A(_119_),
    .B(_131_),
    .Y(_113_)
  );
  NOR _286_ (
    .A(_119_),
    .B(_135_),
    .Y(_114_)
  );
  NAND _287_ (
    .A(reset),
    .B(_136_),
    .Y(_115_)
  );
  NOR _288_ (
    .A(_123_),
    .B(_115_),
    .Y(_003_)
  );
  NAND _289_ (
    .A(i[2]),
    .B(_132_),
    .Y(_116_)
  );
  NAND _290_ (
    .A(_114_),
    .B(_116_),
    .Y(_002_)
  );
  NAND _291_ (
    .A(_051_),
    .B(_113_),
    .Y(_001_)
  );
  NAND _292_ (
    .A(reset),
    .B(i[0]),
    .Y(_000_)
  );
  NOR _293_ (
    .A(temp2[7]),
    .B(_137_),
    .Y(_117_)
  );
  NOR _294_ (
    .A(_139_),
    .B(_016_),
    .Y(_118_)
  );
  NOR _295_ (
    .A(_117_),
    .B(_118_),
    .Y(_033_)
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _296_ (
    .C(clk),
    .D(_000_),
    .Q(i[0])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _297_ (
    .C(clk),
    .D(_001_),
    .Q(i[1])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _298_ (
    .C(clk),
    .D(_002_),
    .Q(i[2])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _299_ (
    .C(clk),
    .D(_003_),
    .Q(i[3])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:37.1-73.4" *)
  DFF _300_ (
    .C(clk_4f),
    .D(_004_),
    .Q(aux2)
  );
  (* src = "SerialParalelo_PhyRX_synth.v:37.1-73.4" *)
  DFF _301_ (
    .C(clk_4f),
    .D(_005_),
    .Q(aux3)
  );
  (* src = "SerialParalelo_PhyRX_synth.v:37.1-73.4" *)
  DFF _302_ (
    .C(clk_4f),
    .D(_006_),
    .Q(active_synth)
  );
  (* src = "SerialParalelo_PhyRX_synth.v:37.1-73.4" *)
  DFF _303_ (
    .C(clk_4f),
    .D(_007_),
    .Q(BC_counter)
  );
  (* src = "SerialParalelo_PhyRX_synth.v:37.1-73.4" *)
  DFF _304_ (
    .C(clk_4f),
    .D(_008_),
    .Q(aux1)
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _305_ (
    .C(clk),
    .D(_009_),
    .Q(temp3[0])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _306_ (
    .C(clk),
    .D(_010_),
    .Q(temp3[1])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _307_ (
    .C(clk),
    .D(_011_),
    .Q(temp3[2])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _308_ (
    .C(clk),
    .D(_012_),
    .Q(temp3[3])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _309_ (
    .C(clk),
    .D(_013_),
    .Q(temp3[4])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _310_ (
    .C(clk),
    .D(_014_),
    .Q(temp3[5])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _311_ (
    .C(clk),
    .D(_015_),
    .Q(temp3[6])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _312_ (
    .C(clk),
    .D(_016_),
    .Q(temp3[7])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:37.1-73.4" *)
  DFF _313_ (
    .C(clk_4f),
    .D(_017_),
    .Q(paralelo_synth[0])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:37.1-73.4" *)
  DFF _314_ (
    .C(clk_4f),
    .D(_018_),
    .Q(paralelo_synth[1])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:37.1-73.4" *)
  DFF _315_ (
    .C(clk_4f),
    .D(_019_),
    .Q(paralelo_synth[2])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:37.1-73.4" *)
  DFF _316_ (
    .C(clk_4f),
    .D(_020_),
    .Q(paralelo_synth[3])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:37.1-73.4" *)
  DFF _317_ (
    .C(clk_4f),
    .D(_021_),
    .Q(paralelo_synth[4])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:37.1-73.4" *)
  DFF _318_ (
    .C(clk_4f),
    .D(_022_),
    .Q(paralelo_synth[5])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:37.1-73.4" *)
  DFF _319_ (
    .C(clk_4f),
    .D(_023_),
    .Q(paralelo_synth[6])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:37.1-73.4" *)
  DFF _320_ (
    .C(clk_4f),
    .D(_024_),
    .Q(paralelo_synth[7])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:37.1-73.4" *)
  DFF _321_ (
    .C(clk_4f),
    .D(_025_),
    .Q(validOut_synth)
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _322_ (
    .C(clk),
    .D(_026_),
    .Q(temp2[0])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _323_ (
    .C(clk),
    .D(_027_),
    .Q(temp2[1])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _324_ (
    .C(clk),
    .D(_028_),
    .Q(temp2[2])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _325_ (
    .C(clk),
    .D(_029_),
    .Q(temp2[3])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _326_ (
    .C(clk),
    .D(_030_),
    .Q(temp2[4])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _327_ (
    .C(clk),
    .D(_031_),
    .Q(temp2[5])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _328_ (
    .C(clk),
    .D(_032_),
    .Q(temp2[6])
  );
  (* src = "SerialParalelo_PhyRX_synth.v:21.1-35.4" *)
  DFF _329_ (
    .C(clk),
    .D(_033_),
    .Q(temp2[7])
  );
  assign data2send = temp2;
endmodule
