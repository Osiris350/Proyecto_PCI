$date
	Mon May 24 08:52:52 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Testbench $end
$var wire 1 ! validOut7 $end
$var wire 1 " validOut6 $end
$var wire 1 # validOut5 $end
$var wire 1 $ validOut4 $end
$var wire 1 % validOut3 $end
$var wire 1 & validOut2 $end
$var wire 1 ' validOut1 $end
$var wire 1 ( validOut0 $end
$var wire 1 ) validIn3 $end
$var wire 1 * validIn2 $end
$var wire 1 + validIn1 $end
$var wire 1 , validIn0 $end
$var wire 1 - selector_IDLE $end
$var wire 8 . dataOut7 [7:0] $end
$var wire 8 / dataOut6 [7:0] $end
$var wire 8 0 dataOut5 [7:0] $end
$var wire 8 1 dataOut4 [7:0] $end
$var wire 8 2 dataOut3 [7:0] $end
$var wire 8 3 dataOut2 [7:0] $end
$var wire 8 4 dataOut1 [7:0] $end
$var wire 8 5 dataOut0 [7:0] $end
$var wire 8 6 dataIn3 [7:0] $end
$var wire 8 7 dataIn2 [7:0] $end
$var wire 8 8 dataIn1 [7:0] $end
$var wire 8 9 dataIn0 [7:0] $end
$var wire 1 : clk $end
$scope module recirculador $end
$var wire 1 ) validIn3 $end
$var wire 1 * validIn2 $end
$var wire 1 + validIn1 $end
$var wire 1 , validIn0 $end
$var wire 1 - selector_IDLE $end
$var wire 8 ; dataIn3 [7:0] $end
$var wire 8 < dataIn2 [7:0] $end
$var wire 8 = dataIn1 [7:0] $end
$var wire 8 > dataIn0 [7:0] $end
$var wire 1 : clk $end
$var reg 8 ? dataOut0 [7:0] $end
$var reg 8 @ dataOut1 [7:0] $end
$var reg 8 A dataOut2 [7:0] $end
$var reg 8 B dataOut3 [7:0] $end
$var reg 8 C dataOut4 [7:0] $end
$var reg 8 D dataOut5 [7:0] $end
$var reg 8 E dataOut6 [7:0] $end
$var reg 8 F dataOut7 [7:0] $end
$var reg 1 ( validOut0 $end
$var reg 1 ' validOut1 $end
$var reg 1 & validOut2 $end
$var reg 1 % validOut3 $end
$var reg 1 $ validOut4 $end
$var reg 1 # validOut5 $end
$var reg 1 " validOut6 $end
$var reg 1 ! validOut7 $end
$upscope $end
$scope module signals_generator $end
$var wire 8 G dataOut0 [7:0] $end
$var wire 8 H dataOut1 [7:0] $end
$var wire 8 I dataOut2 [7:0] $end
$var wire 8 J dataOut3 [7:0] $end
$var wire 8 K dataOut4 [7:0] $end
$var wire 8 L dataOut5 [7:0] $end
$var wire 8 M dataOut6 [7:0] $end
$var wire 8 N dataOut7 [7:0] $end
$var wire 1 ( validOut0 $end
$var wire 1 ' validOut1 $end
$var wire 1 & validOut2 $end
$var wire 1 % validOut3 $end
$var wire 1 $ validOut4 $end
$var wire 1 # validOut5 $end
$var wire 1 " validOut6 $end
$var wire 1 ! validOut7 $end
$var reg 1 : clk $end
$var reg 1 O clk2 $end
$var reg 1 P clk4 $end
$var reg 8 Q dataIn0 [7:0] $end
$var reg 8 R dataIn1 [7:0] $end
$var reg 8 S dataIn2 [7:0] $end
$var reg 8 T dataIn3 [7:0] $end
$var reg 1 - selector_IDLE $end
$var reg 1 , validIn0 $end
$var reg 1 + validIn1 $end
$var reg 1 * validIn2 $end
$var reg 1 ) validIn3 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx T
bx S
bx R
bx Q
1P
0O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
0:
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
0-
0,
0+
0*
0)
x(
x'
x&
x%
0$
0#
0"
0!
$end
#1
0P
#2
1:
1O
b11001100 .
b11001100 F
b11001100 N
b11011101 /
b11011101 E
b11011101 M
b11101110 0
b11101110 D
b11101110 L
b11111111 1
b11111111 C
b11111111 K
1P
b11001100 6
b11001100 ;
b11001100 T
b11011101 7
b11011101 <
b11011101 S
b11101110 8
b11101110 =
b11101110 R
b11111111 9
b11111111 >
b11111111 Q
#3
0P
#4
0O
1P
#5
0P
#6
0:
1O
0%
0&
0'
0(
b11001100 2
b11001100 B
b11001100 J
b11011101 3
b11011101 A
b11011101 I
b11101110 4
b11101110 @
b11101110 H
b11111111 5
b11111111 ?
b11111111 G
1P
1-
#7
0P
#8
0O
1P
#9
0P
#10
1:
1O
b10001000 2
b10001000 B
b10001000 J
b10011001 3
b10011001 A
b10011001 I
b10101010 4
b10101010 @
b10101010 H
b10111011 5
b10111011 ?
b10111011 G
1P
b10001000 6
b10001000 ;
b10001000 T
b10011001 7
b10011001 <
b10011001 S
b10101010 8
b10101010 =
b10101010 R
b10111011 9
b10111011 >
b10111011 Q
#11
0P
#12
0O
1P
#13
0P
#14
0:
1O
1P
#15
0P
#16
0O
1P
#17
0P
#18
1:
1O
bx 2
bx B
bx J
b1110111 3
b1110111 A
b1110111 I
bx 4
bx @
bx H
bx 5
bx ?
bx G
1P
bx 6
bx ;
bx T
b1110111 7
b1110111 <
b1110111 S
bx 8
bx =
bx R
bx 9
bx >
bx Q
#19
0P
#20
0O
1P
#21
0P
#22
0:
1O
1P
